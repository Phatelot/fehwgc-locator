var Js=Object.defineProperty;var Xs=(e,r,t)=>r in e?Js(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var q=(e,r,t)=>Xs(e,typeof r!="symbol"?r+"":r,t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const u of i.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&s(u)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();const mt=!1;var Ht=Array.isArray,Zs=Array.prototype.indexOf,eo=Array.from,ro=Object.defineProperty,Re=Object.getOwnPropertyDescriptor,Mt=Object.getOwnPropertyDescriptors,to=Object.prototype,so=Array.prototype,Dr=Object.getPrototypeOf,ft=Object.isExtensible;function oo(e){return e()}function kr(e){for(var r=0;r<e.length;r++)e[r]()}function no(e,r){if(Array.isArray(e))return e;if(!(Symbol.iterator in e))return Array.from(e);const t=[];for(const s of e)if(t.push(s),t.length===r)break;return t}const re=2,Wt=4,nr=8,Ur=16,ge=32,Ce=64,Lr=128,J=256,Xe=512,Z=1024,ae=2048,ve=4096,Ze=8192,Ir=16384,Vt=32768,zt=65536,io=1<<17,ao=1<<19,Kt=1<<20,Pr=1<<21,me=Symbol("$state"),uo=Symbol("legacy props");function Yt(e){return e===this.v}function co(e,r){return e!=e?r==r:e!==r||e!==null&&typeof e=="object"||typeof e=="function"}function xr(e){return!co(e,this.v)}function lo(e){throw new Error("https://svelte.dev/e/effect_in_teardown")}function po(){throw new Error("https://svelte.dev/e/effect_in_unowned_derived")}function go(e){throw new Error("https://svelte.dev/e/effect_orphan")}function ho(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function mo(e){throw new Error("https://svelte.dev/e/props_invalid_value")}function fo(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function _o(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function Eo(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}let Me=!1,To=!1;function vo(){Me=!0}const wo=1,bo=2,yo=4,ko=8,Po=16,Go=1,Oo=2,Y=Symbol(),Ro="http://www.w3.org/1999/xhtml";let x=null;function _t(e){x=e}function ir(e,r=!1,t){var s=x={p:x,c:null,d:!1,e:null,m:!1,s:e,x:null,l:null};Me&&!r&&(x.l={s:null,u:null,r1:[],r2:jr(!1)}),os(()=>{s.d=!0})}function ar(e){const r=x;if(r!==null){const u=r.e;if(u!==null){var t=S,s=G;r.e=null;try{for(var o=0;o<u.length;o++){var i=u[o];pe(i.effect),oe(i.reaction),Nr(i.fn)}}finally{pe(t),oe(s)}}x=r.p,r.m=!0}return{}}function We(){return!Me||x!==null&&x.l===null}function ue(e){if(typeof e!="object"||e===null||me in e)return e;const r=Dr(e);if(r!==to&&r!==so)return e;var t=new Map,s=Ht(e),o=j(0),i=G,u=a=>{var c=G;oe(i);var g=a();return oe(c),g};return s&&t.set("length",j(e.length)),new Proxy(e,{defineProperty(a,c,g){(!("value"in g)||g.configurable===!1||g.enumerable===!1||g.writable===!1)&&fo();var _=t.get(c);return _===void 0?_=u(()=>{var h=j(g.value);return t.set(c,h),h}):U(_,g.value,!0),!0},deleteProperty(a,c){var g=t.get(c);if(g===void 0){if(c in a){const f=u(()=>j(Y));t.set(c,f),mr(o)}}else{if(s&&typeof c=="string"){var _=t.get("length"),h=Number(c);Number.isInteger(h)&&h<_.v&&U(_,h)}U(g,Y),mr(o)}return!0},get(a,c,g){var T;if(c===me)return e;var _=t.get(c),h=c in a;if(_===void 0&&(!h||(T=Re(a,c))!=null&&T.writable)&&(_=u(()=>{var y=ue(h?a[c]:Y),P=j(y);return P}),t.set(c,_)),_!==void 0){var f=F(_);return f===Y?void 0:f}return Reflect.get(a,c,g)},getOwnPropertyDescriptor(a,c){var g=Reflect.getOwnPropertyDescriptor(a,c);if(g&&"value"in g){var _=t.get(c);_&&(g.value=F(_))}else if(g===void 0){var h=t.get(c),f=h==null?void 0:h.v;if(h!==void 0&&f!==Y)return{enumerable:!0,configurable:!0,value:f,writable:!0}}return g},has(a,c){var f;if(c===me)return!0;var g=t.get(c),_=g!==void 0&&g.v!==Y||Reflect.has(a,c);if(g!==void 0||S!==null&&(!_||(f=Re(a,c))!=null&&f.writable)){g===void 0&&(g=u(()=>{var T=_?ue(a[c]):Y,y=j(T);return y}),t.set(c,g));var h=F(g);if(h===Y)return!1}return _},set(a,c,g,_){var D;var h=t.get(c),f=c in a;if(s&&c==="length")for(var T=g;T<h.v;T+=1){var y=t.get(T+"");y!==void 0?U(y,Y):T in a&&(y=u(()=>j(Y)),t.set(T+"",y))}if(h===void 0)(!f||(D=Re(a,c))!=null&&D.writable)&&(h=u(()=>j(void 0)),U(h,ue(g)),t.set(c,h));else{f=h.v!==Y;var P=u(()=>ue(g));U(h,P)}var b=Reflect.getOwnPropertyDescriptor(a,c);if(b!=null&&b.set&&b.set.call(_,g),!f){if(s&&typeof c=="string"){var O=t.get("length"),C=Number(c);Number.isInteger(C)&&C>=O.v&&U(O,C+1)}mr(o)}return!0},ownKeys(a){F(o);var c=Reflect.ownKeys(a).filter(h=>{var f=t.get(h);return f===void 0||f.v!==Y});for(var[g,_]of t)_.v!==Y&&!(g in a)&&c.push(g);return c},setPrototypeOf(){_o()}})}function mr(e,r=1){U(e,e.v+r)}function Se(e){var r=re|ae,t=G!==null&&(G.f&re)!==0?G:null;return S===null||t!==null&&(t.f&J)!==0?r|=J:S.f|=Kt,{ctx:x,deps:null,effects:null,equals:Yt,f:r,fn:e,reactions:null,rv:0,v:null,wv:0,parent:t??S}}function Ao(e){const r=Se(e);return ms(r),r}function qr(e){const r=Se(e);return r.equals=xr,r}function Qt(e){var r=e.effects;if(r!==null){e.effects=null;for(var t=0;t<r.length;t+=1)Ee(r[t])}}function So(e){for(var r=e.parent;r!==null;){if((r.f&re)===0)return r;r=r.parent}return null}function Jt(e){var r,t=S;pe(So(e));try{Qt(e),r=Ts(e)}finally{pe(t)}return r}function Xt(e){var r=Jt(e);if(e.equals(r)||(e.v=r,e.wv=_s()),!Ue){var t=(le||(e.f&J)!==0)&&e.deps!==null?ve:Z;ne(e,t)}}const He=new Map;function jr(e,r){var t={f:0,v:e,reactions:null,equals:Yt,rv:0,wv:0};return t}function j(e,r){const t=jr(e);return ms(t),t}function Fo(e,r=!1,t=!0){var o;const s=jr(e);return r||(s.equals=xr),Me&&t&&x!==null&&x.l!==null&&((o=x.l).s??(o.s=[])).push(s),s}function U(e,r,t=!1){G!==null&&!se&&We()&&(G.f&(re|Ur))!==0&&!($!=null&&$[1].includes(e)&&$[0]===G)&&Eo();let s=t?ue(r):r;return Co(e,s)}function Co(e,r){if(!e.equals(r)){var t=e.v;Ue?He.set(e,r):He.set(e,t),e.v=r,(e.f&re)!==0&&((e.f&ae)!==0&&Jt(e),ne(e,(e.f&J)===0?Z:ve)),e.wv=_s(),Zt(e,ae),We()&&S!==null&&(S.f&Z)!==0&&(S.f&(ge|Ce))===0&&(X===null?Mo([e]):X.push(e))}return r}function Zt(e,r){var t=e.reactions;if(t!==null)for(var s=We(),o=t.length,i=0;i<o;i++){var u=t[i],a=u.f;(a&ae)===0&&(!s&&u===S||(ne(u,r),(a&(Z|J))!==0&&((a&re)!==0?Zt(u,ve):Mr(u))))}}var Et,es,rs,ts;function Do(){if(Et===void 0){Et=window,es=/Firefox/.test(navigator.userAgent);var e=Element.prototype,r=Node.prototype,t=Text.prototype;rs=Re(r,"firstChild").get,ts=Re(r,"nextSibling").get,ft(e)&&(e.__click=void 0,e.__className=void 0,e.__attributes=null,e.__style=void 0,e.__e=void 0),ft(t)&&(t.__t=void 0)}}function Uo(e=""){return document.createTextNode(e)}function Fe(e){return rs.call(e)}function $r(e){return ts.call(e)}function ce(e,r){return Fe(e)}function Lo(e,r){{var t=Fe(e);return t instanceof Comment&&t.data===""?$r(t):t}}function Ae(e,r=1,t=!1){let s=e;for(;r--;)s=$r(s);return s}function ss(e){S===null&&G===null&&go(),G!==null&&(G.f&J)!==0&&S===null&&po(),Ue&&lo()}function Io(e,r){var t=r.last;t===null?r.last=r.first=e:(t.next=e,e.prev=t,r.last=e)}function De(e,r,t,s=!0){var o=S,i={ctx:x,deps:null,nodes_start:null,nodes_end:null,f:e|ae,first:null,fn:r,last:null,next:null,parent:o,prev:null,teardown:null,transitions:null,wv:0};if(t)try{Hr(i),i.f|=Vt}catch(c){throw Ee(i),c}else r!==null&&Mr(i);var u=t&&i.deps===null&&i.first===null&&i.nodes_start===null&&i.teardown===null&&(i.f&(Kt|Lr))===0;if(!u&&s&&(o!==null&&Io(i,o),G!==null&&(G.f&re)!==0)){var a=G;(a.effects??(a.effects=[])).push(i)}return i}function os(e){const r=De(nr,null,!1);return ne(r,Z),r.teardown=e,r}function Tt(e){ss();var r=S!==null&&(S.f&ge)!==0&&x!==null&&!x.m;if(r){var t=x;(t.e??(t.e=[])).push({fn:e,effect:S,reaction:G})}else{var s=Nr(e);return s}}function xo(e){return ss(),Br(e)}function qo(e){const r=De(Ce,e,!0);return(t={})=>new Promise(s=>{t.outro?ps(r,()=>{Ee(r),s(void 0)}):(Ee(r),s(void 0))})}function Nr(e){return De(Wt,e,!1)}function Br(e){return De(nr,e,!0)}function ns(e,r=[],t=Se){const s=r.map(t);return is(()=>e(...s.map(F)))}function is(e,r=0){return De(nr|Ur|r,e,!0)}function as(e,r=!0){return De(nr|ge,e,!0,r)}function us(e){var r=e.teardown;if(r!==null){const t=Ue,s=G;vt(!0),oe(null);try{r.call(null)}finally{vt(t),oe(s)}}}function cs(e,r=!1){var t=e.first;for(e.first=e.last=null;t!==null;){var s=t.next;(t.f&Ce)!==0?t.parent=null:Ee(t,r),t=s}}function jo(e){for(var r=e.first;r!==null;){var t=r.next;(r.f&ge)===0&&Ee(r),r=t}}function Ee(e,r=!0){var t=!1;(r||(e.f&ao)!==0)&&e.nodes_start!==null&&e.nodes_end!==null&&($o(e.nodes_start,e.nodes_end),t=!0),cs(e,r&&!t),sr(e,0),ne(e,Ir);var s=e.transitions;if(s!==null)for(const i of s)i.stop();us(e);var o=e.parent;o!==null&&o.first!==null&&ls(e),e.next=e.prev=e.teardown=e.ctx=e.deps=e.fn=e.nodes_start=e.nodes_end=null}function $o(e,r){for(;e!==null;){var t=e===r?null:$r(e);e.remove(),e=t}}function ls(e){var r=e.parent,t=e.prev,s=e.next;t!==null&&(t.next=s),s!==null&&(s.prev=t),r!==null&&(r.first===e&&(r.first=s),r.last===e&&(r.last=t))}function ps(e,r){var t=[];gs(e,t,!0),No(t,()=>{Ee(e),r&&r()})}function No(e,r){var t=e.length;if(t>0){var s=()=>--t||r();for(var o of e)o.out(s)}else r()}function gs(e,r,t){if((e.f&Ze)===0){if(e.f^=Ze,e.transitions!==null)for(const u of e.transitions)(u.is_global||t)&&r.push(u);for(var s=e.first;s!==null;){var o=s.next,i=(s.f&zt)!==0||(s.f&ge)!==0;gs(s,r,i?t:!1),s=o}}}let er=[];function Bo(){var e=er;er=[],kr(e)}function ds(e){er.length===0&&queueMicrotask(Bo),er.push(e)}function Ho(e){var r=S;if((r.f&Vt)===0){if((r.f&Lr)===0)throw e;r.fn(e)}else hs(e,r)}function hs(e,r){for(;r!==null;){if((r.f&Lr)!==0)try{r.fn(e);return}catch{}r=r.parent}throw e}let Gr=!1,rr=null,fe=!1,Ue=!1;function vt(e){Ue=e}let Qe=[];let G=null,se=!1;function oe(e){G=e}let S=null;function pe(e){S=e}let $=null;function ms(e){G!==null&&G.f&Pr&&($===null?$=[G,[e]]:$[1].push(e))}let z=null,Q=0,X=null;function Mo(e){X=e}let fs=1,tr=0,le=!1;function _s(){return++fs}function ur(e){var h;var r=e.f;if((r&ae)!==0)return!0;if((r&ve)!==0){var t=e.deps,s=(r&J)!==0;if(t!==null){var o,i,u=(r&Xe)!==0,a=s&&S!==null&&!le,c=t.length;if(u||a){var g=e,_=g.parent;for(o=0;o<c;o++)i=t[o],(u||!((h=i==null?void 0:i.reactions)!=null&&h.includes(g)))&&(i.reactions??(i.reactions=[])).push(g);u&&(g.f^=Xe),a&&_!==null&&(_.f&J)===0&&(g.f^=J)}for(o=0;o<c;o++)if(i=t[o],ur(i)&&Xt(i),i.wv>e.wv)return!0}(!s||S!==null&&!le)&&ne(e,Z)}return!1}function Es(e,r,t=!0){var s=e.reactions;if(s!==null)for(var o=0;o<s.length;o++){var i=s[o];$!=null&&$[1].includes(e)&&$[0]===G||((i.f&re)!==0?Es(i,r,!1):r===i&&(t?ne(i,ae):(i.f&Z)!==0&&ne(i,ve),Mr(i)))}}function Ts(e){var T;var r=z,t=Q,s=X,o=G,i=le,u=$,a=x,c=se,g=e.f;z=null,Q=0,X=null,le=(g&J)!==0&&(se||!fe||G===null),G=(g&(ge|Ce))===0?e:null,$=null,_t(e.ctx),se=!1,tr++,e.f|=Pr;try{var _=(0,e.fn)(),h=e.deps;if(z!==null){var f;if(sr(e,Q),h!==null&&Q>0)for(h.length=Q+z.length,f=0;f<z.length;f++)h[Q+f]=z[f];else e.deps=h=z;if(!le)for(f=Q;f<h.length;f++)((T=h[f]).reactions??(T.reactions=[])).push(e)}else h!==null&&Q<h.length&&(sr(e,Q),h.length=Q);if(We()&&X!==null&&!se&&h!==null&&(e.f&(re|ve|ae))===0)for(f=0;f<X.length;f++)Es(X[f],e);return o!==null&&o!==e&&(tr++,X!==null&&(s===null?s=X:s.push(...X))),_}catch(y){Ho(y)}finally{z=r,Q=t,X=s,G=o,le=i,$=u,_t(a),se=c,e.f^=Pr}}function Wo(e,r){let t=r.reactions;if(t!==null){var s=Zs.call(t,e);if(s!==-1){var o=t.length-1;o===0?t=r.reactions=null:(t[s]=t[o],t.pop())}}t===null&&(r.f&re)!==0&&(z===null||!z.includes(r))&&(ne(r,ve),(r.f&(J|Xe))===0&&(r.f^=Xe),Qt(r),sr(r,0))}function sr(e,r){var t=e.deps;if(t!==null)for(var s=r;s<t.length;s++)Wo(e,t[s])}function Hr(e){var r=e.f;if((r&Ir)===0){ne(e,Z);var t=S,s=fe;S=e,fe=!0;try{(r&Ur)!==0?jo(e):cs(e),us(e);var o=Ts(e);e.teardown=typeof o=="function"?o:null,e.wv=fs;var i;mt&&To&&(e.f&ae)!==0&&e.deps}finally{fe=s,S=t}}}function Vo(){try{ho()}catch(e){if(rr!==null)hs(e,rr);else throw e}}function zo(){var e=fe;try{var r=0;for(fe=!0;Qe.length>0;){r++>1e3&&Vo();var t=Qe,s=t.length;Qe=[];for(var o=0;o<s;o++){var i=Yo(t[o]);Ko(i)}He.clear()}}finally{Gr=!1,fe=e,rr=null}}function Ko(e){var r=e.length;if(r!==0)for(var t=0;t<r;t++){var s=e[t];(s.f&(Ir|Ze))===0&&ur(s)&&(Hr(s),s.deps===null&&s.first===null&&s.nodes_start===null&&(s.teardown===null?ls(s):s.fn=null))}}function Mr(e){Gr||(Gr=!0,queueMicrotask(zo));for(var r=rr=e;r.parent!==null;){r=r.parent;var t=r.f;if((t&(Ce|ge))!==0){if((t&Z)===0)return;r.f^=Z}}Qe.push(r)}function Yo(e){for(var r=[],t=e;t!==null;){var s=t.f,o=(s&(ge|Ce))!==0,i=o&&(s&Z)!==0;if(!i&&(s&Ze)===0){(s&Wt)!==0?r.push(t):o?t.f^=Z:ur(t)&&Hr(t);var u=t.first;if(u!==null){t=u;continue}}var a=t.parent;for(t=t.next;t===null&&a!==null;)t=a.next,a=a.parent}return r}function F(e){var r=e.f,t=(r&re)!==0;if(G!==null&&!se){if(!($!=null&&$[1].includes(e))||$[0]!==G){var s=G.deps;e.rv<tr&&(e.rv=tr,z===null&&s!==null&&s[Q]===e?Q++:z===null?z=[e]:(!le||!z.includes(e))&&z.push(e))}}else if(t&&e.deps===null&&e.effects===null){var o=e,i=o.parent;i!==null&&(i.f&J)===0&&(o.f^=J)}return t&&(o=e,ur(o)&&Xt(o)),Ue&&He.has(e)?He.get(e):e.v}function Te(e){var r=se;try{return se=!0,e()}finally{se=r}}const Qo=-7169;function ne(e,r){e.f=e.f&Qo|r}function Wr(e){if(!(typeof e!="object"||!e||e instanceof EventTarget)){if(me in e)Or(e);else if(!Array.isArray(e))for(let r in e){const t=e[r];typeof t=="object"&&t&&me in t&&Or(t)}}}function Or(e,r=new Set){if(typeof e=="object"&&e!==null&&!(e instanceof EventTarget)&&!r.has(e)){r.add(e),e instanceof Date&&e.getTime();for(let s in e)try{Or(e[s],r)}catch{}const t=Dr(e);if(t!==Object.prototype&&t!==Array.prototype&&t!==Map.prototype&&t!==Set.prototype&&t!==Date.prototype){const s=Mt(t);for(let o in s){const i=s[o].get;if(i)try{i.call(e)}catch{}}}}}const Jo=["touchstart","touchmove"];function Xo(e){return Jo.includes(e)}let wt=!1;function Zo(){wt||(wt=!0,document.addEventListener("reset",e=>{Promise.resolve().then(()=>{var r;if(!e.defaultPrevented)for(const t of e.target.elements)(r=t.__on_r)==null||r.call(t)})},{capture:!0}))}function vs(e){var r=G,t=S;oe(null),pe(null);try{return e()}finally{oe(r),pe(t)}}function en(e,r,t,s=t){e.addEventListener(r,()=>vs(t));const o=e.__on_r;o?e.__on_r=()=>{o(),s(!0)}:e.__on_r=()=>s(!0),Zo()}const ws=new Set,Rr=new Set;function rn(e,r,t,s={}){function o(i){if(s.capture||$e.call(r,i),!i.cancelBubble)return vs(()=>t==null?void 0:t.call(this,i))}return e.startsWith("pointer")||e.startsWith("touch")||e==="wheel"?ds(()=>{r.addEventListener(e,o,s)}):r.addEventListener(e,o,s),o}function qe(e,r,t,s,o){var i={capture:s,passive:o},u=rn(e,r,t,i);(r===document.body||r===window||r===document||r instanceof HTMLMediaElement)&&os(()=>{r.removeEventListener(e,u,i)})}function Vr(e){for(var r=0;r<e.length;r++)ws.add(e[r]);for(var t of Rr)t(e)}function $e(e){var C;var r=this,t=r.ownerDocument,s=e.type,o=((C=e.composedPath)==null?void 0:C.call(e))||[],i=o[0]||e.target,u=0,a=e.__root;if(a){var c=o.indexOf(a);if(c!==-1&&(r===document||r===window)){e.__root=r;return}var g=o.indexOf(r);if(g===-1)return;c<=g&&(u=c)}if(i=o[u]||e.target,i!==r){ro(e,"currentTarget",{configurable:!0,get(){return i||t}});var _=G,h=S;oe(null),pe(null);try{for(var f,T=[];i!==null;){var y=i.assignedSlot||i.parentNode||i.host||null;try{var P=i["__"+s];if(P!=null&&(!i.disabled||e.target===i))if(Ht(P)){var[b,...O]=P;b.apply(i,[e,...O])}else P.call(i,e)}catch(D){f?T.push(D):f=D}if(e.cancelBubble||y===r||y===null)break;i=y}if(f){for(let D of T)queueMicrotask(()=>{throw D});throw f}}finally{e.__root=r,delete e.currentTarget,oe(_),pe(h)}}}function bs(e){var r=document.createElement("template");return r.innerHTML=e.replaceAll("<!>","<!---->"),r.content}function Ar(e,r){var t=S;t.nodes_start===null&&(t.nodes_start=e,t.nodes_end=r)}function zr(e,r){var t=(r&Go)!==0,s=(r&Oo)!==0,o,i=!e.startsWith("<!>");return()=>{o===void 0&&(o=bs(i?e:"<!>"+e),t||(o=Fe(o)));var u=s||es?document.importNode(o,!0):o.cloneNode(!0);if(t){var a=Fe(u),c=u.lastChild;Ar(a,c)}else Ar(u,u);return u}}function tn(e,r,t="svg"){var s=!e.startsWith("<!>"),o=`<${t}>${s?e:"<!>"+e}</${t}>`,i;return()=>{if(!i){var u=bs(o),a=Fe(u);i=Fe(a)}var c=i.cloneNode(!0);return Ar(c,c),c}}function sn(e,r){return tn(e,r,"svg")}function cr(e,r){e!==null&&e.before(r)}function on(e,r){return nn(e,r)}const ke=new Map;function nn(e,{target:r,anchor:t,props:s={},events:o,context:i,intro:u=!0}){Do();var a=new Set,c=h=>{for(var f=0;f<h.length;f++){var T=h[f];if(!a.has(T)){a.add(T);var y=Xo(T);r.addEventListener(T,$e,{passive:y});var P=ke.get(T);P===void 0?(document.addEventListener(T,$e,{passive:y}),ke.set(T,1)):ke.set(T,P+1)}}};c(eo(ws)),Rr.add(c);var g=void 0,_=qo(()=>{var h=t??r.appendChild(Uo());return as(()=>{if(i){ir({});var f=x;f.c=i}o&&(s.$$events=o),g=e(h,s)||{},i&&ar()}),()=>{var y;for(var f of a){r.removeEventListener(f,$e);var T=ke.get(f);--T===0?(document.removeEventListener(f,$e),ke.delete(f)):ke.set(f,T)}Rr.delete(c),h!==t&&((y=h.parentNode)==null||y.removeChild(h))}});return an.set(g,_),g}let an=new WeakMap;function un(e,r,t){var s=e,o,i;is(()=>{o!==(o=r())&&(i&&(ps(i),i=null),o&&(i=as(()=>t(s,o))))},zt)}function cn(e,r){return e==null?null:String(e)}function ln(e,r,t,s){var o=e.__style;if(o!==r){var i=cn(r);i==null?e.removeAttribute("style"):e.style.cssText=i,e.__style=r}return s}const pn=Symbol("is custom element"),gn=Symbol("is html");function dn(e,r,t,s){var o=mn(e);o[r]!==(o[r]=t)&&(t==null?e.removeAttribute(r):typeof t!="string"&&fn(e).includes(r)?e[r]=t:e.setAttribute(r,t))}function hn(e,r,t){e.setAttributeNS("http://www.w3.org/1999/xlink",r,t)}function mn(e){return e.__attributes??(e.__attributes={[pn]:e.nodeName.includes("-"),[gn]:e.namespaceURI===Ro})}var bt=new Map;function fn(e){var r=bt.get(e.nodeName);if(r)return r;bt.set(e.nodeName,r=[]);for(var t,s=e,o=Element.prototype;o!==s;){t=Mt(s);for(var i in t)t[i].set&&r.push(i);s=Dr(s)}return r}function _n(e,r,t=r){var s=We();en(e,"input",o=>{var i=o?e.defaultValue:e.value;if(i=fr(e)?_r(i):i,t(i),s&&i!==(i=r())){var u=e.selectionStart,a=e.selectionEnd;e.value=i??"",a!==null&&(e.selectionStart=u,e.selectionEnd=Math.min(a,e.value.length))}}),Te(r)==null&&e.value&&t(fr(e)?_r(e.value):e.value),Br(()=>{var o=r();fr(e)&&o===_r(e.value)||e.type==="date"&&!o&&!e.value||o!==e.value&&(e.value=o??"")})}function fr(e){var r=e.type;return r==="number"||r==="range"}function _r(e){return e===""?null:+e}function yt(e,r){return e===r||(e==null?void 0:e[me])===r}function kt(e={},r,t,s){return Nr(()=>{var o,i;return Br(()=>{o=i,i=[],Te(()=>{e!==t(...i)&&(r(e,...i),o&&yt(t(...o),e)&&r(null,...o))})}),()=>{ds(()=>{i&&yt(t(...i),e)&&r(null,...i)})}}),e}function ys(e=!1){const r=x,t=r.l.u;if(!t)return;let s=()=>Wr(r.s);if(e){let o=0,i={};const u=Se(()=>{let a=!1;const c=r.s;for(const g in c)c[g]!==i[g]&&(i[g]=c[g],a=!0);return a&&o++,o});s=()=>F(u)}t.b.length&&xo(()=>{Pt(r,s),kr(t.b)}),Tt(()=>{const o=Te(()=>t.m.map(oo));return()=>{for(const i of o)typeof i=="function"&&i()}}),t.a.length&&Tt(()=>{Pt(r,s),kr(t.a)})}function Pt(e,r){if(e.l.s)for(const t of e.l.s)F(t);r()}let ze=!1;function En(e){var r=ze;try{return ze=!1,[e(),ze]}finally{ze=r}}function Gt(e){var r;return((r=e.ctx)==null?void 0:r.d)??!1}function Ke(e,r,t,s){var M;var o=(t&wo)!==0,i=!Me||(t&bo)!==0,u=(t&ko)!==0,a=(t&Po)!==0,c=!1,g;u?[g,c]=En(()=>e[r]):g=e[r];var _=me in e||uo in e,h=u&&(((M=Re(e,r))==null?void 0:M.set)??(_&&r in e&&(A=>e[r]=A)))||void 0,f=s,T=!0,y=!1,P=()=>(y=!0,T&&(T=!1,a?f=Te(s):f=s),f);g===void 0&&s!==void 0&&(h&&i&&mo(),g=P(),h&&h(g));var b;if(i)b=()=>{var A=e[r];return A===void 0?P():(T=!0,y=!1,A)};else{var O=(o?Se:qr)(()=>e[r]);O.f|=io,b=()=>{var A=F(O);return A!==void 0&&(f=void 0),A===void 0?f:A}}if((t&yo)===0&&i)return b;if(h){var C=e.$$legacy;return function(A,W){return arguments.length>0?((!i||!W||C||c)&&h(W?b():A),A):b()}}var D=!1,ee=Fo(g),I=Se(()=>{var A=b(),W=F(ee);return D?(D=!1,W):ee.v=A});return u&&F(I),o||(I.equals=xr),function(A,W){if(arguments.length>0){const L=W?F(I):i&&u?ue(A):A;if(!I.equals(L)){if(D=!0,U(ee,L),y&&f!==void 0&&(f=L),Gt(I))return A;Te(()=>F(I))}return A}return Gt(I)?I.v:F(I)}}const Tn="5";var Bt;typeof window<"u"&&((Bt=window.__svelte??(window.__svelte={})).v??(Bt.v=new Set)).add(Tn);function lr(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function ks(e,r,t,s){if(typeof t!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(r)?r.reverse().reduce((o,i)=>ks.bind(null,e,i,o,s),t)():Promise.resolve().then(()=>e.registry[r]?e.registry[r].reduce((o,i)=>i.hook.bind(null,o,s),t)():t(s))}function vn(e,r,t,s){const o=s;e.registry[t]||(e.registry[t]=[]),r==="before"&&(s=(i,u)=>Promise.resolve().then(o.bind(null,u)).then(i.bind(null,u))),r==="after"&&(s=(i,u)=>{let a;return Promise.resolve().then(i.bind(null,u)).then(c=>(a=c,o(a,u))).then(()=>a)}),r==="error"&&(s=(i,u)=>Promise.resolve().then(i.bind(null,u)).catch(a=>o(a,u))),e.registry[t].push({hook:s,orig:o})}function wn(e,r,t){if(!e.registry[r])return;const s=e.registry[r].map(o=>o.orig).indexOf(t);s!==-1&&e.registry[r].splice(s,1)}const Ot=Function.bind,Rt=Ot.bind(Ot);function bn(e,r,t){const s=Rt(wn,null).apply(null,[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(o=>{const i=[r,o];e[o]=e.api[o]=Rt(vn,null).apply(null,i)})}function yn(){const e={registry:{}},r=ks.bind(null,e);return bn(r,e),r}const kn={Collection:yn};var Pn="0.0.0-development",Gn=`octokit-endpoint.js/${Pn} ${lr()}`,On={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":Gn},mediaType:{format:""}};function Rn(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function An(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function Ps(e,r){const t=Object.assign({},e);return Object.keys(r).forEach(s=>{An(r[s])?s in e?t[s]=Ps(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})}),t}function At(e){for(const r in e)e[r]===void 0&&delete e[r];return e}function Sr(e,r,t){var o;if(typeof r=="string"){let[i,u]=r.split(" ");t=Object.assign(u?{method:i,url:u}:{url:i},t)}else t=Object.assign({},r);t.headers=Rn(t.headers),At(t),At(t.headers);const s=Ps(e||{},t);return t.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(i=>!s.mediaType.previews.includes(i)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),s}function Sn(e,r){const t=/\?/.test(e)?"&":"?",s=Object.keys(r);return s.length===0?e:e+t+s.map(o=>o==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(r[o])}`).join("&")}var Fn=/\{[^{}}]+\}/g;function Cn(e){return e.replace(new RegExp("(?:^\\W+)|(?:(?<!\\W)\\W+$)","g"),"").split(/,/)}function Dn(e){const r=e.match(Fn);return r?r.map(Cn).reduce((t,s)=>t.concat(s),[]):[]}function St(e,r){const t={__proto__:null};for(const s of Object.keys(e))r.indexOf(s)===-1&&(t[s]=e[s]);return t}function Gs(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function Oe(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function je(e,r,t){return r=e==="+"||e==="#"?Gs(r):Oe(r),t?Oe(t)+"="+r:r}function Pe(e){return e!=null}function Er(e){return e===";"||e==="&"||e==="?"}function Un(e,r,t,s){var o=e[t],i=[];if(Pe(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),i.push(je(r,o,Er(r)?t:""));else if(s==="*")Array.isArray(o)?o.filter(Pe).forEach(function(u){i.push(je(r,u,Er(r)?t:""))}):Object.keys(o).forEach(function(u){Pe(o[u])&&i.push(je(r,o[u],u))});else{const u=[];Array.isArray(o)?o.filter(Pe).forEach(function(a){u.push(je(r,a))}):Object.keys(o).forEach(function(a){Pe(o[a])&&(u.push(Oe(a)),u.push(je(r,o[a].toString())))}),Er(r)?i.push(Oe(t)+"="+u.join(",")):u.length!==0&&i.push(u.join(","))}else r===";"?Pe(o)&&i.push(Oe(t)):o===""&&(r==="&"||r==="?")?i.push(Oe(t)+"="):o===""&&i.push("");return i}function Ln(e){return{expand:In.bind(null,e)}}function In(e,r){var t=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,i){if(o){let a="";const c=[];if(t.indexOf(o.charAt(0))!==-1&&(a=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(g){var _=/([^:\*]*)(?::(\d+)|(\*))?/.exec(g);c.push(Un(r,a,_[1],_[2]||_[3]))}),a&&a!=="+"){var u=",";return a==="?"?u="&":a!=="#"&&(u=a),(c.length!==0?a:"")+c.join(u)}else return c.join(",")}else return Gs(i)}),e==="/"?e:e.replace(/\/$/,"")}function Os(e){var _;let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,i=St(e,["method","baseUrl","url","headers","request","mediaType"]);const u=Dn(t);t=Ln(t).expand(i),/^http/.test(t)||(t=e.baseUrl+t);const a=Object.keys(e).filter(h=>u.includes(h)).concat("baseUrl"),c=St(i,a);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(h=>h.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(_=e.mediaType.previews)!=null&&_.length)){const h=s.accept.match(new RegExp("(?<![\\w-])[\\w-]+(?=-preview)","g"))||[];s.accept=h.concat(e.mediaType.previews).map(f=>{const T=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${f}-preview${T}`}).join(",")}return["GET","HEAD"].includes(r)?t=Sn(t,c):"data"in c?o=c.data:Object.keys(c).length&&(o=c),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof o>"u"&&(o=""),Object.assign({method:r,url:t,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function xn(e,r,t){return Os(Sr(e,r,t))}function Rs(e,r){const t=Sr(e,r),s=xn.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:Rs.bind(null,t),merge:Sr.bind(null,t),parse:Os})}var qn=Rs(null,On),Ft=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function jn(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Ge={},Ct;function $n(){if(Ct)return Ge;Ct=1;const e=function(){};e.prototype=Object.create(null);const r=/; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu,t=/\\([\v\u0020-\u00ff])/gu,s=/^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u,o={type:"",parameters:new e};Object.freeze(o.parameters),Object.freeze(o);function i(a){if(typeof a!="string")throw new TypeError("argument header is required and must be a string");let c=a.indexOf(";");const g=c!==-1?a.slice(0,c).trim():a.trim();if(s.test(g)===!1)throw new TypeError("invalid media type");const _={type:g.toLowerCase(),parameters:new e};if(c===-1)return _;let h,f,T;for(r.lastIndex=c;f=r.exec(a);){if(f.index!==c)throw new TypeError("invalid parameter format");c+=f[0].length,h=f[1].toLowerCase(),T=f[2],T[0]==='"'&&(T=T.slice(1,T.length-1),t.test(T)&&(T=T.replace(t,"$1"))),_.parameters[h]=T}if(c!==a.length)throw new TypeError("invalid parameter format");return _}function u(a){if(typeof a!="string")return o;let c=a.indexOf(";");const g=c!==-1?a.slice(0,c).trim():a.trim();if(s.test(g)===!1)return o;const _={type:g.toLowerCase(),parameters:new e};if(c===-1)return _;let h,f,T;for(r.lastIndex=c;f=r.exec(a);){if(f.index!==c)return o;c+=f[0].length,h=f[1].toLowerCase(),T=f[2],T[0]==='"'&&(T=T.slice(1,T.length-1),t.test(T)&&(T=T.replace(t,"$1"))),_.parameters[h]=T}return c!==a.length?o:_}return Ge.default={parse:i,safeParse:u},Ge.parse=i,Ge.safeParse=u,Ge.defaultContentType=o,Ge}var Nn=$n();class Ne extends Error{constructor(t,s,o){super(t);q(this,"name");q(this,"status");q(this,"request");q(this,"response");this.name="HttpError",this.status=Number.parseInt(s),Number.isNaN(this.status)&&(this.status=0),"response"in o&&(this.response=o.response);const i=Object.assign({},o.request);o.request.headers.authorization&&(i.headers=Object.assign({},o.request.headers,{authorization:o.request.headers.authorization.replace(new RegExp("(?<! ) .*$")," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i}}var Bn="10.0.3",Hn={headers:{"user-agent":`octokit-request.js/${Bn} ${lr()}`}};function Mn(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}async function Dt(e){var h,f,T,y,P;const r=((h=e.request)==null?void 0:h.fetch)||globalThis.fetch;if(!r)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const t=((f=e.request)==null?void 0:f.log)||console,s=((T=e.request)==null?void 0:T.parseSuccessResponseBody)!==!1,o=Mn(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,i=Object.fromEntries(Object.entries(e.headers).map(([b,O])=>[b,String(O)]));let u;try{u=await r(e.url,{method:e.method,body:o,redirect:(y=e.request)==null?void 0:y.redirect,headers:i,signal:(P=e.request)==null?void 0:P.signal,...e.body&&{duplex:"half"}})}catch(b){let O="Unknown Error";if(b instanceof Error){if(b.name==="AbortError")throw b.status=500,b;O=b.message,b.name==="TypeError"&&"cause"in b&&(b.cause instanceof Error?O=b.cause.message:typeof b.cause=="string"&&(O=b.cause))}const C=new Ne(O,500,{request:e});throw C.cause=b,C}const a=u.status,c=u.url,g={};for(const[b,O]of u.headers)g[b]=O;const _={url:c,status:a,headers:g,data:""};if("deprecation"in g){const b=g.link&&g.link.match(/<([^<>]+)>; rel="deprecation"/),O=b&&b.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${g.sunset}${O?`. See ${O}`:""}`)}if(a===204||a===205)return _;if(e.method==="HEAD"){if(a<400)return _;throw new Ne(u.statusText,a,{response:_,request:e})}if(a===304)throw _.data=await Tr(u),new Ne("Not modified",a,{response:_,request:e});if(a>=400)throw _.data=await Tr(u),new Ne(Vn(_.data),a,{response:_,request:e});return _.data=s?await Tr(u):u.body,_}async function Tr(e){var s;const r=e.headers.get("content-type");if(!r)return e.text().catch(()=>"");const t=Nn.safeParse(r);if(Wn(t)){let o="";try{return o=await e.text(),JSON.parse(o)}catch{return o}}else return t.type.startsWith("text/")||((s=t.parameters.charset)==null?void 0:s.toLowerCase())==="utf-8"?e.text().catch(()=>""):e.arrayBuffer().catch(()=>new ArrayBuffer(0))}function Wn(e){return e.type==="application/json"||e.type==="application/scim+json"}function Vn(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const r="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(t=>JSON.stringify(t)).join(", ")}${r}`:`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function Fr(e,r){const t=e.defaults(r);return Object.assign(function(o,i){const u=t.merge(o,i);if(!u.request||!u.request.hook)return Dt(t.parse(u));const a=(c,g)=>Dt(t.parse(t.merge(c,g)));return Object.assign(a,{endpoint:t,defaults:Fr.bind(null,t)}),u.request.hook(a,u)},{endpoint:t,defaults:Fr.bind(null,t)})}var Cr=Fr(qn,Hn),zn="0.0.0-development";function Kn(e){return`Request failed due to following response errors:
`+e.errors.map(r=>` - ${r.message}`).join(`
`)}var Yn=class extends Error{constructor(r,t,s){super(Kn(s));q(this,"name","GraphqlResponseError");q(this,"errors");q(this,"data");this.request=r,this.headers=t,this.response=s,this.errors=s.errors,this.data=s.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Qn=["method","baseUrl","url","headers","request","query","mediaType","operationName"],Jn=["query","method","url"],Ut=/\/api\/v3\/?$/;function Xn(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const u in t)if(Jn.includes(u))return Promise.reject(new Error(`[@octokit/graphql] "${u}" cannot be used as variable name`))}const s=typeof r=="string"?Object.assign({query:r},t):r,o=Object.keys(s).reduce((u,a)=>Qn.includes(a)?(u[a]=s[a],u):(u.variables||(u.variables={}),u.variables[a]=s[a],u),{}),i=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Ut.test(i)&&(o.url=i.replace(Ut,"/api/graphql")),e(o).then(u=>{if(u.data.errors){const a={};for(const c of Object.keys(u.headers))a[c]=u.headers[c];throw new Yn(o,a,u.data)}return u.data.data})}function Kr(e,r){const t=e.defaults(r);return Object.assign((o,i)=>Xn(t,o,i),{defaults:Kr.bind(null,t),endpoint:t.endpoint})}Kr(Cr,{headers:{"user-agent":`octokit-graphql.js/${zn} ${lr()}`},method:"POST",url:"/graphql"});function Zn(e){return Kr(e,{method:"POST",url:"/graphql"})}var vr="(?:[a-zA-Z0-9_-]+)",Lt="\\.",It=new RegExp(`^${vr}${Lt}${vr}${Lt}${vr}$`),ei=It.test.bind(It);async function ri(e){const r=ei(e),t=e.startsWith("v1.")||e.startsWith("ghs_"),s=e.startsWith("ghu_");return{type:"token",token:e,tokenType:r?"app":t?"installation":s?"user-to-server":"oauth"}}function ti(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function si(e,r,t,s){const o=r.endpoint.merge(t,s);return o.headers.authorization=ti(e),r(o)}var oi=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(ri.bind(null,r),{hook:si.bind(null,r)})};const As="7.0.2",xt=()=>{},ni=console.warn.bind(console),ii=console.error.bind(console),qt=`octokit-core.js/${As} ${lr()}`;var Ye;let ai=(Ye=class{constructor(r={}){q(this,"request");q(this,"graphql");q(this,"log");q(this,"hook");q(this,"auth");const t=new kn.Collection,s={baseUrl:Cr.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=r.userAgent?`${r.userAgent} ${qt}`:qt,r.baseUrl&&(s.baseUrl=r.baseUrl),r.previews&&(s.mediaType.previews=r.previews),r.timeZone&&(s.headers["time-zone"]=r.timeZone),this.request=Cr.defaults(s),this.graphql=Zn(this.request).defaults(s),this.log=Object.assign({debug:xt,info:xt,warn:ni,error:ii},r.log),this.hook=t,r.authStrategy){const{authStrategy:i,...u}=r,a=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:u},r.auth));t.wrap("request",a.hook),this.auth=a}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=oi(r.auth);t.wrap("request",i.hook),this.auth=i}const o=this.constructor;for(let i=0;i<o.plugins.length;++i)Object.assign(this,o.plugins[i](this,r))}static defaults(r){return class extends this{constructor(...s){const o=s[0]||{};if(typeof r=="function"){super(r(o));return}super(Object.assign({},r,o,o.userAgent&&r.userAgent?{userAgent:`${o.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var o;const t=this.plugins;return o=class extends this{},q(o,"plugins",t.concat(r.filter(i=>!t.includes(i)))),o}},q(Ye,"VERSION",As),q(Ye,"plugins",[]),Ye);var ui="0.0.0-development";function ci(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)||"total_commits"in e.data))return e;const t=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count,i=e.data.total_commits;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count,delete e.data.total_commits;const u=Object.keys(e.data)[0],a=e.data[u];return e.data=a,typeof t<"u"&&(e.data.incomplete_results=t),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e.data.total_commits=i,e}function Yr(e,r,t){const s=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),o=typeof r=="function"?r:e.request,i=s.method,u=s.headers;let a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};try{const c=await o({method:i,url:a,headers:u}),g=ci(c);if(a=((g.headers.link||"").match(/<([^<>]+)>;\s*rel="next"/)||[])[1],!a&&"total_commits"in g.data){const _=new URL(g.url),h=_.searchParams,f=parseInt(h.get("page")||"1",10),T=parseInt(h.get("per_page")||"250",10);f*T<g.data.total_commits&&(h.set("page",String(f+1)),a=_.toString())}return{value:g}}catch(c){if(c.status!==409)throw c;return a="",{value:{status:200,headers:{},data:[]}}}}})}}function Ss(e,r,t,s){return typeof t=="function"&&(s=t,t=void 0),Fs(e,[],Yr(e,r,t)[Symbol.asyncIterator](),s)}function Fs(e,r,t,s){return t.next().then(o=>{if(o.done)return r;let i=!1;function u(){i=!0}return r=r.concat(s?s(o.value,u):o.value.data),i?r:Fs(e,r,t,s)})}Object.assign(Ss,{iterator:Yr});function Cs(e){return{paginate:Object.assign(Ss.bind(null,e),{iterator:Yr.bind(null,e)})}}Cs.VERSION=ui;var li=(e,r)=>`The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,pi=class extends Error{constructor(r,t){super(li(r.pathInQuery,t));q(this,"name","MissingCursorChangeError");this.pageInfo=r,this.cursorValue=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},gi=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`);q(this,"name","MissingPageInfo");this.response=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},di=e=>Object.prototype.toString.call(e)==="[object Object]";function Ds(e){const r=Us(e,"pageInfo");if(r.length===0)throw new gi(e);return r}var Us=(e,r,t=[])=>{for(const s of Object.keys(e)){const o=[...t,s],i=e[s];if(di(i)){if(i.hasOwnProperty(r))return o;const u=Us(i,r,o);if(u.length>0)return u}}return[]},Be=(e,r)=>r.reduce((t,s)=>t[s],e),wr=(e,r,t)=>{const s=r[r.length-1],o=[...r].slice(0,-1),i=Be(e,o);typeof t=="function"?i[s]=t(i[s]):i[s]=t},hi=e=>{const r=Ds(e);return{pathInQuery:r,pageInfo:Be(e,[...r,"pageInfo"])}},Ls=e=>e.hasOwnProperty("hasNextPage"),mi=e=>Ls(e)?e.endCursor:e.startCursor,fi=e=>Ls(e)?e.hasNextPage:e.hasPreviousPage,Is=e=>(r,t={})=>{let s=!0,o={...t};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const i=await e.graphql(r,o),u=hi(i),a=mi(u.pageInfo);if(s=fi(u.pageInfo),s&&a===o.cursor)throw new pi(u,a);return o={...o,cursor:a},{done:!1,value:i}}})}},_i=(e,r)=>{if(Object.keys(e).length===0)return Object.assign(e,r);const t=Ds(e),s=[...t,"nodes"],o=Be(r,s);o&&wr(e,s,c=>[...c,...o]);const i=[...t,"edges"],u=Be(r,i);u&&wr(e,i,c=>[...c,...u]);const a=[...t,"pageInfo"];return wr(e,a,Be(r,a)),e},Ei=e=>{const r=Is(e);return async(t,s={})=>{let o={};for await(const i of r(t,s))o=_i(o,i);return o}};function Ti(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(Ei(e),{iterator:Is(e)})})}}const vi="16.0.0",wi={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addRepoAccessToSelfHostedRunnerGroupInOrg:["PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createHostedRunnerForOrg:["POST /orgs/{org}/actions/hosted-runners"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteHostedRunnerForOrg:["DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getHostedRunnerForOrg:["GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],getHostedRunnersGithubOwnedImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/github-owned"],getHostedRunnersLimitsForOrg:["GET /orgs/{org}/actions/hosted-runners/limits"],getHostedRunnersMachineSpecsForOrg:["GET /orgs/{org}/actions/hosted-runners/machine-sizes"],getHostedRunnersPartnerImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/partner"],getHostedRunnersPlatformsForOrg:["GET /orgs/{org}/actions/hosted-runners/platforms"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listGithubHostedRunnersInGroupForOrg:["GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners"],listHostedRunnersForOrg:["GET /orgs/{org}/actions/hosted-runners"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateHostedRunnerForOrg:["PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubBillingUsageReportOrg:["GET /organizations/{org}/settings/billing/usage"],getGithubBillingUsageReportUser:["GET /users/{username}/settings/billing/usage"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},campaigns:{createCampaign:["POST /orgs/{org}/campaigns"],deleteCampaign:["DELETE /orgs/{org}/campaigns/{campaign_number}"],getCampaignSummary:["GET /orgs/{org}/campaigns/{campaign_number}"],listOrgCampaigns:["GET /orgs/{org}/campaigns"],updateCampaign:["PATCH /orgs/{org}/campaigns/{campaign_number}"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{commitAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"],createAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],createVariantAnalysis:["POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"],deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],deleteCodeqlDatabase:["DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getAutofix:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],getVariantAnalysis:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"],getVariantAnalysisRepoTask:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codeSecurity:{attachConfiguration:["POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"],attachEnterpriseConfiguration:["POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"],createConfiguration:["POST /orgs/{org}/code-security/configurations"],createConfigurationForEnterprise:["POST /enterprises/{enterprise}/code-security/configurations"],deleteConfiguration:["DELETE /orgs/{org}/code-security/configurations/{configuration_id}"],deleteConfigurationForEnterprise:["DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],detachConfiguration:["DELETE /orgs/{org}/code-security/configurations/detach"],getConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}"],getConfigurationForRepository:["GET /repos/{owner}/{repo}/code-security-configuration"],getConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations"],getConfigurationsForOrg:["GET /orgs/{org}/code-security/configurations"],getDefaultConfigurations:["GET /orgs/{org}/code-security/configurations/defaults"],getDefaultConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/defaults"],getRepositoriesForConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"],getRepositoriesForEnterpriseConfiguration:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"],getSingleConfigurationForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],setConfigurationAsDefault:["PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"],setConfigurationAsDefaultForEnterprise:["PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"],updateConfiguration:["PATCH /orgs/{org}/code-security/configurations/{configuration_id}"],updateEnterpriseConfiguration:["PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],copilotMetricsForOrganization:["GET /orgs/{org}/copilot/metrics"],copilotMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"]},credentials:{revoke:["POST /credentials/revoke"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},hostedCompute:{createNetworkConfigurationForOrg:["POST /orgs/{org}/settings/network-configurations"],deleteNetworkConfigurationFromOrg:["DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkConfigurationForOrg:["GET /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkSettingsForOrg:["GET /orgs/{org}/settings/network-settings/{network_settings_id}"],listNetworkConfigurationsForOrg:["GET /orgs/{org}/settings/network-configurations"],updateNetworkConfigurationForOrg:["PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],addSubIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listSubIssues:["GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeSubIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"],reprioritizeSubIssue:["PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team"}],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createIssueType:["POST /orgs/{org}/issue-types"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteIssueType:["DELETE /orgs/{org}/issue-types/{issue_type_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}",{},{deprecated:"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization"}],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getOrgRulesetHistory:["GET /orgs/{org}/rulesets/{ruleset_id}/history"],getOrgRulesetVersion:["GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listAttestations:["GET /orgs/{org}/attestations/{subject_digest}"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listIssueTypes:["GET /orgs/{org}/issue-types"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers",{},{deprecated:"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams"}],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team"}],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateIssueType:["PUT /orgs/{org}/issue-types/{issue_type_id}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},privateRegistries:{createOrgPrivateRegistry:["POST /orgs/{org}/private-registries"],deleteOrgPrivateRegistry:["DELETE /orgs/{org}/private-registries/{secret_name}"],getOrgPrivateRegistry:["GET /orgs/{org}/private-registries/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/private-registries/public-key"],listOrgPrivateRegistries:["GET /orgs/{org}/private-registries"],updateOrgPrivateRegistry:["PATCH /orgs/{org}/private-registries/{secret_name}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAttestation:["POST /repos/{owner}/{repo}/attestations"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesetHistory:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history"],getRepoRulesetVersion:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAttestations:["GET /repos/{owner}/{repo}/attestations/{subject_digest}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues",{},{deprecated:"octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests"}],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{createPushProtectionBypass:["POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"],getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],getScanHistory:["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getById:["GET /user/{account_id}"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listAttestations:["GET /users/{username}/attestations/{subject_digest}"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var bi=wi;const _e=new Map;for(const[e,r]of Object.entries(bi))for(const[t,s]of Object.entries(r)){const[o,i,u]=s,[a,c]=o.split(/ /),g=Object.assign({method:a,url:c},i);_e.has(e)||_e.set(e,new Map),_e.get(e).set(t,{scope:e,methodName:t,endpointDefaults:g,decorations:u})}const yi={has({scope:e},r){return _e.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,r,t){return Object.defineProperty(e.cache,r,t),!0},deleteProperty(e,r){return delete e.cache[r],!0},ownKeys({scope:e}){return[..._e.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},s){if(t[s])return t[s];const o=_e.get(r).get(s);if(!o)return;const{endpointDefaults:i,decorations:u}=o;return u?t[s]=Pi(e,r,s,i,u):t[s]=e.request.defaults(i),t[s]}};function ki(e){const r={};for(const t of _e.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},yi);return r}function Pi(e,r,t,s,o){const i=e.request.defaults(s);function u(...a){let c=i.endpoint.merge(...a);if(o.mapToData)return c=Object.assign({},c,{data:c[o.mapToData],[o.mapToData]:void 0}),i(c);if(o.renamed){const[g,_]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${g}.${_}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const g=i.endpoint.merge(...a);for(const[_,h]of Object.entries(o.renamedParameters))_ in g&&(e.log.warn(`"${_}" parameter is deprecated for "octokit.${r}.${t}()". Use "${h}" instead`),h in g||(g[h]=g[_]),delete g[_]);return i(g)}return i(...a)}return Object.assign(u,i)}function xs(e){return{rest:ki(e)}}xs.VERSION=vi;var Je={exports:{}},Gi=Je.exports,jt;function Oi(){return jt||(jt=1,function(e,r){(function(t,s){e.exports=s()})(Gi,function(){var t=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof Ft<"u"?Ft:typeof self<"u"?self:{};function s(w){return w&&w.default||w}var o=function(w,l,n={}){var p,d,m;for(p in l)m=l[p],n[p]=(d=w[p])!=null?d:m;return n},i=function(w,l,n={}){var p,d;for(p in w)d=w[p],l[p]!==void 0&&(n[p]=d);return n},u={load:o,overwrite:i},a;a=class{constructor(l,n){this.incr=l,this.decr=n,this._first=null,this._last=null,this.length=0}push(l){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:l,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var l;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),l=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,l}first(){if(this._first!=null)return this._first.value}getArray(){var l,n,p;for(l=this._first,p=[];l!=null;)p.push((n=l,l=l.next,n.value));return p}forEachShift(l){var n;for(n=this.shift();n!=null;)l(n),n=this.shift()}debug(){var l,n,p,d,m;for(l=this._first,m=[];l!=null;)m.push((n=l,l=l.next,{value:n.value,prev:(p=n.prev)!=null?p.value:void 0,next:(d=n.next)!=null?d.value:void 0}));return m}};var c=a,g;g=class{constructor(l){if(this.instance=l,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,p)=>this._addListener(n,"many",p),this.instance.once=(n,p)=>this._addListener(n,"once",p),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(l,n,p){var d;return(d=this._events)[l]==null&&(d[l]=[]),this._events[l].push({cb:p,status:n}),this.instance}listenerCount(l){return this._events[l]!=null?this._events[l].length:0}async trigger(l,...n){var p,d;try{return l!=="debug"&&this.trigger("debug",`Event triggered: ${l}`,n),this._events[l]==null?void 0:(this._events[l]=this._events[l].filter(function(m){return m.status!=="none"}),d=this._events[l].map(async m=>{var E,v;if(m.status!=="none"){m.status==="once"&&(m.status="none");try{return v=typeof m.cb=="function"?m.cb(...n):void 0,typeof(v!=null?v.then:void 0)=="function"?await v:v}catch(R){return E=R,this.trigger("error",E),null}}}),(await Promise.all(d)).find(function(m){return m!=null}))}catch(m){return p=m,this.trigger("error",p),null}}};var _=g,h,f,T;h=c,f=_,T=class{constructor(l){this.Events=new f(this),this._length=0,this._lists=(function(){var n,p,d;for(d=[],n=1,p=l;1<=p?n<=p:n>=p;1<=p?++n:--n)d.push(new h(()=>this.incr(),()=>this.decr()));return d}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(l){return this._lists[l.options.priority].push(l)}queued(l){return l!=null?this._lists[l].length:this._length}shiftAll(l){return this._lists.forEach(function(n){return n.forEachShift(l)})}getFirst(l=this._lists){var n,p,d;for(n=0,p=l.length;n<p;n++)if(d=l[n],d.length>0)return d;return[]}shiftLastFrom(l){return this.getFirst(this._lists.slice(l).reverse()).shift()}};var y=T,P;P=class extends Error{};var b=P,O,C,D,ee,I;ee=10,C=5,I=u,O=b,D=class{constructor(l,n,p,d,m,E,v,R){this.task=l,this.args=n,this.rejectOnDrop=m,this.Events=E,this._states=v,this.Promise=R,this.options=I.load(p,d),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===d.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((B,H)=>{this._resolve=B,this._reject=H}),this.retryCount=0}_sanitizePriority(l){var n;return n=~~l!==l?C:l,n<0?0:n>ee-1?ee-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:l,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(l??new O(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(l){var n;if(n=this._states.jobStatus(this.options.id),!(n===l||l==="DONE"&&n===null))throw new O(`Invalid job status ${n}, expected ${l}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(l,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:l,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(l,n,p,d){var m,E,v;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),E={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",E);try{if(v=await(l!=null?l.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(E),await d(this.options,E),this._assertStatus("DONE"),this._resolve(v)}catch(R){return m=R,this._onFailure(m,E,n,p,d)}}doExpire(l,n,p){var d,m;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),m={args:this.args,options:this.options,retryCount:this.retryCount},d=new O(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(d,m,l,n,p)}async _onFailure(l,n,p,d,m){var E,v;if(p())return E=await this.Events.trigger("failed",l,n),E!=null?(v=~~E,this.Events.trigger("retry",`Retrying ${this.options.id} after ${v} ms`,n),this.retryCount++,d(v)):(this.doDone(n),await m(this.options,n),this._assertStatus("DONE"),this._reject(l))}doDone(l){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",l)}};var M=D,A,W,L;L=u,A=b,W=class{constructor(l,n,p){this.instance=l,this.storeOptions=n,this.clientId=this.instance._randomIndex(),L.load(p,p,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var l;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(l=this.heartbeat=setInterval(()=>{var n,p,d,m,E;if(m=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&m>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=m,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&m>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:d,reservoir:E}=this.storeOptions,this._lastReservoirIncrease=m,p=d!=null?Math.min(n,d-E):n,p>0))return this.storeOptions.reservoir+=p,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?l.unref():void 0:clearInterval(this.heartbeat)}async __publish__(l){return await this.yieldLoop(),this.instance.Events.trigger("message",l.toString())}async __disconnect__(l){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(l=0){return new this.Promise(function(n,p){return setTimeout(n,l)})}computePenalty(){var l;return(l=this.storeOptions.penalty)!=null?l:15*this.storeOptions.minTime||5e3}async __updateSettings__(l){return await this.yieldLoop(),L.overwrite(l,l,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(l){return await this.yieldLoop(),this._nextRequest+this.timeout<l}computeCapacity(){var l,n;return{maxConcurrent:l,reservoir:n}=this.storeOptions,l!=null&&n!=null?Math.min(l-this._running,n):l!=null?l-this._running:n??null}conditionsCheck(l){var n;return n=this.computeCapacity(),n==null||l<=n}async __incrementReservoir__(l){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=l,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(l){return this._unblockTime>=l}check(l,n){return this.conditionsCheck(l)&&this._nextRequest-n<=0}async __check__(l){var n;return await this.yieldLoop(),n=Date.now(),this.check(l,n)}async __register__(l,n,p){var d,m;return await this.yieldLoop(),d=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),m=Math.max(this._nextRequest-d,0),this._nextRequest=d+m+this.storeOptions.minTime,{success:!0,wait:m,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(l,n){var p,d,m;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new A(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return d=Date.now(),m=this.storeOptions.highWater!=null&&l===this.storeOptions.highWater&&!this.check(n,d),p=this.strategyIsBlock()&&(m||this.isBlocked(d)),p&&(this._unblockTime=d+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:m,blocked:p,strategy:this.storeOptions.strategy}}async __free__(l,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var we=W,k,V;k=b,V=class{constructor(l){this.status=l,this._jobs={},this.counts=this.status.map(function(){return 0})}next(l){var n,p;if(n=this._jobs[l],p=n+1,n!=null&&p<this.status.length)return this.counts[n]--,this.counts[p]++,this._jobs[l]++;if(n!=null)return this.counts[n]--,delete this._jobs[l]}start(l){var n;return n=0,this._jobs[l]=n,this.counts[n]++}remove(l){var n;return n=this._jobs[l],n!=null&&(this.counts[n]--,delete this._jobs[l]),n!=null}jobStatus(l){var n;return(n=this.status[this._jobs[l]])!=null?n:null}statusJobs(l){var n,p,d,m,E;if(l!=null){if(p=this.status.indexOf(l),p<0)throw new k(`status must be one of ${this.status.join(", ")}`);d=this._jobs,m=[];for(n in d)E=d[n],E===p&&m.push(n);return m}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((l,n,p)=>(l[this.status[p]]=n,l),{})}};var N=V,K,ie;K=c,ie=class{constructor(l,n){this.schedule=this.schedule.bind(this),this.name=l,this.Promise=n,this._running=0,this._queue=new K}isEmpty(){return this._queue.length===0}async _tryToRun(){var l,n,p,d,m,E,v;if(this._running<1&&this._queue.length>0)return this._running++,{task:v,args:l,resolve:m,reject:d}=this._queue.shift(),n=await async function(){try{return E=await v(...l),function(){return m(E)}}catch(R){return p=R,function(){return d(p)}}}(),this._running--,this._tryToRun(),n()}schedule(l,...n){var p,d,m;return m=d=null,p=new this.Promise(function(E,v){return m=E,d=v}),this._queue.push({task:l,args:n,resolve:m,reject:d}),this._tryToRun(),p}};var de=ie,be="2.19.5",Le={version:be},ye=Object.freeze({version:be,default:Le}),Ie=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Jr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Ms=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Xr,Zr,et,rt,tt,Ve;Ve=u,Xr=_,rt=Ie,et=Jr,tt=Ms,Zr=(function(){class w{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,Ve.load(this.limiterOptions,this.defaults,this),this.Events=new Xr(this),this.instances={},this.Bottleneck=dt,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new rt(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new et(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var p;return(p=this.instances[n])!=null?p:(()=>{var d;return d=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",d,n),d})()}async deleteKey(n=""){var p,d;return d=this.instances[n],this.connection&&(p=await this.connection.__runCommand__(["del",...tt.allKeys(`${this.id}-${n}`)])),d!=null&&(delete this.instances[n],await d.disconnect()),d!=null||p>0}limiters(){var n,p,d,m;p=this.instances,d=[];for(n in p)m=p[n],d.push({key:n,limiter:m});return d}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,p,d,m,E,v,R,B,H;if(this.connection==null)return this.Promise.resolve(this.keys());for(v=[],n=null,H=`b_${this.id}-`.length,p=9;n!==0;)for([B,d]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~B,m=0,R=d.length;m<R;m++)E=d[m],v.push(E.slice(H,-p));return v}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var p,d,m,E,v,R;v=Date.now(),m=this.instances,E=[];for(d in m){R=m[d];try{await R._store.__groupCheck__(v)?E.push(this.deleteKey(d)):E.push(void 0)}catch(B){p=B,E.push(R.Events.trigger("error",p))}}return E},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(Ve.overwrite(n,this.defaults,this),Ve.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var p;if(!this.sharedConnection)return(p=this.connection)!=null?p.disconnect(n):void 0}}return w.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},w}).call(t);var Ws=Zr,st,ot,nt;nt=u,ot=_,st=(function(){class w{constructor(n={}){this.options=n,nt.load(this.options,this.defaults,this),this.Events=new ot(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,p)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var p;return this._arr.push(n),p=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),p}}return w.prototype.defaults={maxTime:null,maxSize:null,Promise},w}).call(t);var Vs=st,zs=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Ks=s(ye),it,at,pr,gr,ut,dr,ct,lt,pt,hr,te,gt=[].splice;dr=10,at=5,te=u,ct=y,gr=M,ut=we,lt=zs,pr=_,pt=N,hr=de,it=(function(){class w{constructor(n={},...p){var d,m;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,p),te.load(n,this.instanceDefaults,this),this._queues=new ct(dr),this._scheduled={},this._states=new pt(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new pr(this),this._submitLock=new hr("submit",this.Promise),this._registerLock=new hr("register",this.Promise),m=te.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return d=te.load(n,this.redisStoreDefaults,{}),new lt(this,m,d);if(this.datastore==="local")return d=te.load(n,this.localStoreDefaults,{}),new ut(this,m,d);throw new w.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var E;return(E=this._store.heartbeat)!=null&&typeof E.ref=="function"?E.ref():void 0}),this._queues.on("zero",()=>{var E;return(E=this._store.heartbeat)!=null&&typeof E.unref=="function"?E.unref():void 0})}_validateOptions(n,p){if(!(n!=null&&typeof n=="object"&&p.length===0))throw new w.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,p,d,m){var E,v;try{if({running:v}=await this._store.__free__(n,d.weight),this.Events.trigger("debug",`Freed ${d.id}`,m),v===0&&this.empty())return this.Events.trigger("idle")}catch(R){return E=R,this.Events.trigger("error",E)}}_run(n,p,d){var m,E,v;return p.doRun(),m=this._clearGlobalState.bind(this,n),v=this._run.bind(this,n,p),E=this._free.bind(this,n,p),this._scheduled[n]={timeout:setTimeout(()=>p.doExecute(this._limiter,m,v,E),d),expiration:p.options.expiration!=null?setTimeout(function(){return p.doExpire(m,v,E)},d+p.options.expiration):void 0,job:p}}_drainOne(n){return this._registerLock.schedule(()=>{var p,d,m,E,v;return this.queued()===0?this.Promise.resolve(null):(v=this._queues.getFirst(),{options:E,args:p}=m=v.first(),n!=null&&E.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${E.id}`,{args:p,options:E}),d=this._randomIndex(),this._store.__register__(d,E.weight,E.expiration).then(({success:R,wait:B,reservoir:H})=>{var xe;return this.Events.trigger("debug",`Drained ${E.id}`,{success:R,args:p,options:E}),R?(v.shift(),xe=this.empty(),xe&&this.Events.trigger("empty"),H===0&&this.Events.trigger("depleted",xe),this._run(d,m,B),this.Promise.resolve(E.weight)):this.Promise.resolve(null)})))})}_drainAll(n,p=0){return this._drainOne(n).then(d=>{var m;return d!=null?(m=n!=null?n-d:n,this._drainAll(m,p+d)):this.Promise.resolve(p)}).catch(d=>this.Events.trigger("error",d))}_dropAllQueued(n){return this._queues.shiftAll(function(p){return p.doDrop({message:n})})}stop(n={}){var p,d;return n=te.load(n,this.stopDefaults),d=m=>{var E;return E=()=>{var v;return v=this._states.counts,v[0]+v[1]+v[2]+v[3]===m},new this.Promise((v,R)=>E()?v():this.on("done",()=>{if(E())return this.removeAllListeners("done"),v()}))},p=n.dropWaitingJobs?(this._run=function(m,E){return E.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var m,E,v;E=this._scheduled;for(m in E)v=E[m],this.jobStatus(v.job.options.id)==="RUNNING"&&(clearTimeout(v.timeout),clearTimeout(v.expiration),v.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),d(0)}))):this.schedule({priority:dr-1,weight:0},()=>d(1)),this._receive=function(m){return m._reject(new w.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new w.prototype.BottleneckError("stop() has already been called")),p}async _addToQueue(n){var p,d,m,E,v,R,B;({args:p,options:E}=n);try{({reachedHWM:v,blocked:d,strategy:B}=await this._store.__submit__(this.queued(),E.weight))}catch(H){return m=H,this.Events.trigger("debug",`Could not queue ${E.id}`,{args:p,options:E,error:m}),n.doDrop({error:m}),!1}return d?(n.doDrop(),!0):v&&(R=B===w.prototype.strategy.LEAK?this._queues.shiftLastFrom(E.priority):B===w.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(E.priority+1):B===w.prototype.strategy.OVERFLOW?n:void 0,R!=null&&R.doDrop(),R==null||B===w.prototype.strategy.OVERFLOW)?(R==null&&n.doDrop(),v):(n.doQueue(v,d),this._queues.push(n),await this._drainAll(),v)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new w.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var p,d,m,E,v,R,B;return typeof n[0]=="function"?(v=n,[d,...n]=v,[p]=gt.call(n,-1),E=te.load({},this.jobDefaults)):(R=n,[E,d,...n]=R,[p]=gt.call(n,-1),E=te.load(E,this.jobDefaults)),B=(...H)=>new this.Promise(function(xe,Qs){return d(...H,function(...ht){return(ht[0]!=null?Qs:xe)(ht)})}),m=new gr(B,n,E,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),m.promise.then(function(H){return typeof p=="function"?p(...H):void 0}).catch(function(H){return Array.isArray(H)?typeof p=="function"?p(...H):void 0:typeof p=="function"?p(H):void 0}),this._receive(m)}schedule(...n){var p,d,m;return typeof n[0]=="function"?([m,...n]=n,d={}):[d,m,...n]=n,p=new gr(m,n,d,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(p),p.promise}wrap(n){var p,d;return p=this.schedule.bind(this),d=function(...m){return p(n.bind(this),...m)},d.withOptions=function(m,...E){return p(m,n,...E)},d}async updateSettings(n={}){return await this._store.__updateSettings__(te.overwrite(n,this.storeDefaults)),te.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return w.default=w,w.Events=pr,w.version=w.prototype.version=Ks.version,w.strategy=w.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},w.BottleneckError=w.prototype.BottleneckError=b,w.Group=w.prototype.Group=Ws,w.RedisConnection=w.prototype.RedisConnection=Ie,w.IORedisConnection=w.prototype.IORedisConnection=Jr,w.Batcher=w.prototype.Batcher=Vs,w.prototype.jobDefaults={priority:at,weight:1,expiration:null,id:"<no-id>"},w.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:w.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},w.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},w.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},w.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},w.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},w}).call(t);var dt=it,Ys=dt;return Ys})}(Je)),Je.exports}var Ri=Oi();const qs=jn(Ri);var Ai="0.0.0-development";async function js(e,r,t,s){if(!t.request||!t.request.request)throw t;if(t.status>=400&&!e.doNotRetry.includes(t.status)){const o=s.request.retries!=null?s.request.retries:e.retries,i=Math.pow((s.request.retryCount||0)+1,2);throw r.retry.retryRequest(t,o,i)}throw t}async function Si(e,r,t,s){const o=new qs;return o.on("failed",function(i,u){const a=~~i.request.request.retries,c=~~i.request.request.retryAfter;if(s.request.retryCount=u.retryCount+1,a>u.retryCount)return c*e.retryAfterBaseValue}),o.schedule(Fi.bind(null,e,r,t),s)}async function Fi(e,r,t,s){const o=await t(t,s);if(o.data&&o.data.errors&&o.data.errors.length>0&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const i=new Ne(o.data.errors[0].message,500,{request:s,response:o});return js(e,r,i,s)}return o}function $s(e,r){const t=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,410,422,451],retries:3},r.retry);return t.enabled&&(e.hook.error("request",js.bind(null,t,e)),e.hook.wrap("request",Si.bind(null,t,e))),{retry:{retryRequest:(s,o,i)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:i}),s)}}}$s.VERSION=Ai;var Ci="0.0.0-development",br=()=>Promise.resolve();function Di(e,r,t){return e.retryLimiter.schedule(Ui,e,r,t)}async function Ui(e,r,t){const{pathname:s}=new URL(t.url,"http://github.test"),o=Li(t.method,s),i=!o&&t.method!=="GET"&&t.method!=="HEAD",u=t.method==="GET"&&s.startsWith("/search/"),a=s.startsWith("/graphql"),g=~~r.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(g.expiration=1e3*60),(i||a)&&await e.write.key(e.id).schedule(g,br),i&&e.triggersNotification(s)&&await e.notifications.key(e.id).schedule(g,br),u&&await e.search.key(e.id).schedule(g,br);const _=(o?e.auth:e.global).key(e.id).schedule(g,r,t);if(a){const h=await _;if(h.data.errors!=null&&h.data.errors.some(f=>f.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:h,data:h.data})}return _}function Li(e,r){return e==="PATCH"&&/^\/applications\/[^/]+\/token\/scoped$/.test(r)||e==="POST"&&(/^\/applications\/[^/]+\/token$/.test(r)||/^\/app\/installations\/[^/]+\/access_tokens$/.test(r)||r==="/login/oauth/access_token")}var Ii=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/issues/{issue_number}/sub_issue","/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function xi(e){const t=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(t,"i")}var $t=xi(Ii),Ns=$t.test.bind($t),he={},qi=function(e,r){he.global=new e.Group({id:"octokit-global",maxConcurrent:10,...r}),he.auth=new e.Group({id:"octokit-auth",maxConcurrent:1,...r}),he.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...r}),he.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...r}),he.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...r})};function Qr(e,r){const{enabled:t=!0,Bottleneck:s=qs,id:o="no-id",timeout:i=1e3*60*2,connection:u}=r.throttle||{};if(!t)return{};const a={timeout:i};typeof u<"u"&&(a.connection=u),he.global==null&&qi(s,a);const c=Object.assign({clustering:u!=null,triggersNotification:Ns,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...he},r.throttle);if(typeof c.onSecondaryRateLimit!="function"||typeof c.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const g={},_=new s.Events(g);return g.on("secondary-limit",c.onSecondaryRateLimit),g.on("rate-limit",c.onRateLimit),g.on("error",h=>e.log.warn("Error in throttling-plugin limit handler",h)),c.retryLimiter.on("failed",async function(h,f){const[T,y,P]=f.args,{pathname:b}=new URL(P.url,"http://github.test");if(!(b.startsWith("/graphql")&&h.status!==401||h.status===403||h.status===429))return;const C=~~y.retryCount;y.retryCount=C,P.request.retryCount=C;const{wantRetry:D,retryAfter:ee=0}=await async function(){var I;if(/\bsecondary rate\b/i.test(h.message)){const M=Number(h.response.headers["retry-after"])||T.fallbackSecondaryRateRetryAfter;return{wantRetry:await _.trigger("secondary-limit",M,P,e,C),retryAfter:M}}if(h.response.headers!=null&&h.response.headers["x-ratelimit-remaining"]==="0"||(((I=h.response.data)==null?void 0:I.errors)??[]).some(M=>M.type==="RATE_LIMITED")){const M=new Date(~~h.response.headers["x-ratelimit-reset"]*1e3).getTime(),A=Math.max(Math.ceil((M-Date.now())/1e3)+1,0);return{wantRetry:await _.trigger("rate-limit",A,P,e,C),retryAfter:A}}return{}}();if(D)return y.retryCount++,ee*T.retryAfterBaseValue}),e.hook.wrap("request",Di.bind(null,c)),{}}Qr.VERSION=Ci;Qr.triggersNotification=Ns;var ji="0.0.0-development",Bs=ai.plugin(xs,Cs,Ti,$s,Qr).defaults({userAgent:`octokit.js/${ji}`,throttle:{onRateLimit:$i,onSecondaryRateLimit:Ni}});function $i(e,r,t){if(t.log.warn(`Request quota exhausted for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}function Ni(e,r,t){if(t.log.warn(`SecondaryRateLimit detected for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}let yr=(()=>{const e=Hs()||"";return e&&new Bs({auth:e}),e})();function Bi(e){yr=e,localStorage.setItem("nina-admin",yr),new Bs({auth:yr})}function Hs(){return localStorage.getItem("nina-admin")}var Hi=(e,r)=>Bi(F(r)),Mi=zr('<h1>Set up Github token</h1> <form><label>Token <input type="password"/></label></form>',1);function Wi(e,r){ir(r,!0);let t=j(ue(Hs()||""));var s=Mi(),o=Ae(Lo(s),2),i=ce(o),u=Ae(ce(i));u.__change=[Hi,t],_n(u,()=>F(t),a=>U(t,a)),cr(e,s),ar()}Vr(["change"]);vo();function or(e){return Vi("/fehwgc-locator/images/"+e)}function Vi(e){return e.replace("//","/")}function Nt(e,r,t,s,o,i,u,a,c,g,_,h,f,T){if(e instanceof TouchEvent&&e.touches.length===2){U(r,!1),U(t,!0),U(s,o(e.touches),!0),U(i,u(),!0),(P=>{var b=no(P,2);U(a,b[0],!0),U(c,b[1],!0)})(g(e.touches));return}U(r,!0);const y=e instanceof TouchEvent?e.touches[0]:e;U(_,y.clientX-h()),U(f,y.clientY-T()),e.preventDefault()}var zi=zr('<div class="viewport svelte-12m9o11"><img alt="Zoomable view" draggable="false" class="svelte-12m9o11"/></div>');function Ki(e,r){let t,s,u=Ke(r,"src",3,""),a=Ke(r,"x",7,0),c=Ke(r,"y",7,0),g=Ke(r,"scale",7,1),_=j(!1),h=j(!1),f=j(0),T=j(0),y=j(0),P=j(1),b=j(0),O=j(0);function C(k){if(k instanceof TouchEvent&&k.touches.length===2){const N=M(k.touches),K=W(F(P)*(N/F(y)),1,8),ie=t.getBoundingClientRect(),[de,be]=[F(b)-ie.left,F(O)-ie.top],Le=de-a(),ye=be-c(),Ie=K/g();a(a()-Le*(Ie-1)),c(c()-ye*(Ie-1)),g(K),I();return}if(!F(_))return;const V=k instanceof TouchEvent?k.touches[0]:k;a(V.clientX-F(f)),c(V.clientY-F(T)),I(),k.preventDefault()}function D(){U(_,!1),U(h,!1)}function ee(k){const V=g();let N=g()+k.deltaY*-.001;N=W(N,1,8);const K=t.getBoundingClientRect(),ie=k.clientX-K.left-K.width/2,de=k.clientY-K.top-K.height/2,be=ie-a(),Le=de-c(),ye=N/V;a(a()-be*(ye-1)),c(c()-Le*(ye-1)),g(N),I(),k.preventDefault()}function I(){if(!s||!t)return;const k=t.clientWidth,V=t.clientHeight,N=k*(1-g())/2,K=V*(1-g())/2,ie=-N,de=-K;a(W(a(),N,ie)),c(W(c(),K,de))}function M(k){const V=k[0].clientX-k[1].clientX,N=k[0].clientY-k[1].clientY;return Math.hypot(V,N)}function A(k){const V=(k[0].clientX+k[1].clientX)/2,N=(k[0].clientY+k[1].clientY)/2;return[V,N]}function W(k,V,N){return Math.min(Math.max(k,V),N)}var L=zi();L.__pointerdown=[Nt,_,h,y,M,P,g,b,O,A,f,a,T,c],L.__pointermove=C,L.__pointerup=D,L.__touchstart=[Nt,_,h,y,M,P,g,b,O,A,f,a,T,c],L.__touchmove=C,L.__touchend=D;var we=ce(L);kt(we,k=>s=k,()=>s),kt(L,k=>t=k,()=>t),ns(()=>{dn(we,"src",u()),ln(we,`transform: translate(${a()??""}px, ${c()??""}px) scale(${g()??""});`)}),qe("pointercancel",L,D),qe("pointerleave",L,D),qe("wheel",L,ee),qe("touchcancel",L,D),qe("load",we,I),cr(e,L)}Vr(["pointerdown","pointermove","pointerup","touchstart","touchmove","touchend"]);function Yi(e,r){ir(r,!1),ys();const t=qr(()=>(Wr(or),Te(()=>or("spread.webp"))));Ki(e,{scale:1,get src(){return F(t)},x:0,y:0}),ar()}var Qi=sn('<svg viewBox="0 0 5432 2387" xmlns="http://www.w3.org/2000/svg" class="bg svelte-bnml8e"><defs><linearGradient id="bg-mask-gradient" x1="0" x2="0" y1="0" y2="1"><stop offset="0%" stop-color="#ffffff"></stop><stop offset="60%" stop-color="#ffffff"></stop><stop offset="100%" stop-color="#000000"></stop></linearGradient><mask id="bg-mask" x="0%" y="0%" width="100%" height="100%" maskUnits="userSpaceOnUse"><rect x="0%" y="0%" width="100%" height="100%" fill="url(#bg-mask-gradient)"></rect></mask></defs><image width="100%" mask="url(#bg-mask)"></image></svg>');function Ji(e,r){ir(r,!1),ys();var t=Qi(),s=Ae(ce(t));ns(o=>hn(s,"xlink:href",o),[()=>(Wr(or),Te(()=>or("BG.webp")))],qr),cr(e,t),ar()}var Xi=(e,r)=>r("/"),Zi=zr('<main class="container-fluid"><!> <nav><ul><li class="svelte-1wcw53k">Fire emblem heroes drive</li></ul> <ul><li class="svelte-1wcw53k"><a href="#/" class="contrast svelte-1wcw53k">Image</a></li></ul></nav> <!></main>');function ea(e){let r=j(ue(t()));function t(){return location.hash.slice(1)||"/"}window.addEventListener("hashchange",()=>{U(r,t(),!0)});function s(T){location.hash=T}const o={"/":Yi,"/token":Wi},i=Ao(()=>o[F(r)]??o["/"]);var u=Zi(),a=ce(u);Ji(a,{});var c=Ae(a,2),g=Ae(ce(c),2),_=ce(g),h=ce(_);h.__click=[Xi,s];var f=Ae(c,2);un(f,()=>F(i),(T,y)=>{y(T,{})}),cr(e,u)}Vr(["click"]);on(ea,{target:document.getElementById("app")});
