var Qs=Object.defineProperty;var Js=(e,r,t)=>r in e?Qs(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var q=(e,r,t)=>Js(e,typeof r!="symbol"?r+"":r,t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();const pt=!1;var Nt=Array.isArray,Xs=Array.prototype.indexOf,Zs=Array.from,eo=Object.defineProperty,ke=Object.getOwnPropertyDescriptor,Bt=Object.getOwnPropertyDescriptors,ro=Object.prototype,to=Array.prototype,Gr=Object.getPrototypeOf,dt=Object.isExtensible;function so(e){return e()}function Tr(e){for(var r=0;r<e.length;r++)e[r]()}function oo(e,r){if(Array.isArray(e))return e;if(!(Symbol.iterator in e))return Array.from(e);const t=[];for(const s of e)if(t.push(s),t.length===r)break;return t}const Z=2,Ht=4,rr=8,Rr=16,de=32,Re=64,Ar=128,Y=256,Ke=512,X=1024,ae=2048,ve=4096,Ye=8192,Sr=16384,Mt=32768,Wt=65536,no=1<<17,io=1<<19,Vt=1<<20,vr=1<<21,me=Symbol("$state"),ao=Symbol("legacy props");function zt(e){return e===this.v}function uo(e,r){return e!=e?r==r:e!==r||e!==null&&typeof e=="object"||typeof e=="function"}function Fr(e){return!uo(e,this.v)}function co(e){throw new Error("https://svelte.dev/e/effect_in_teardown")}function lo(){throw new Error("https://svelte.dev/e/effect_in_unowned_derived")}function po(e){throw new Error("https://svelte.dev/e/effect_orphan")}function go(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function ho(e){throw new Error("https://svelte.dev/e/props_invalid_value")}function mo(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function fo(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function _o(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}let xe=!1,Eo=!1;function To(){xe=!0}const vo=1,wo=2,bo=4,yo=8,Po=16,ko=1,Oo=2,z=Symbol(),Go="http://www.w3.org/1999/xhtml";let L=null;function gt(e){L=e}function Cr(e,r=!1,t){var s=L={p:L,c:null,d:!1,e:null,m:!1,s:e,x:null,l:null};xe&&!r&&(L.l={s:null,u:null,r1:[],r2:Ur(!1)}),os(()=>{s.d=!0})}function Dr(e){const r=L;if(r!==null){const a=r.e;if(a!==null){var t=S,s=R;r.e=null;try{for(var o=0;o<a.length;o++){var i=a[o];pe(i.effect),se(i.reaction),Ir(i.fn)}}finally{pe(t),se(s)}}L=r.p,r.m=!0}return{}}function je(){return!xe||L!==null&&L.l===null}function ce(e){if(typeof e!="object"||e===null||me in e)return e;const r=Gr(e);if(r!==ro&&r!==to)return e;var t=new Map,s=Nt(e),o=x(0),i=R,a=u=>{var p=R;se(i);var d=u();return se(p),d};return s&&t.set("length",x(e.length)),new Proxy(e,{defineProperty(u,p,d){(!("value"in d)||d.configurable===!1||d.enumerable===!1||d.writable===!1)&&mo();var _=t.get(p);return _===void 0?_=a(()=>{var h=x(d.value);return t.set(p,h),h}):C(_,d.value,!0),!0},deleteProperty(u,p){var d=t.get(p);if(d===void 0){if(p in u){const f=a(()=>x(z));t.set(p,f),lr(o)}}else{if(s&&typeof p=="string"){var _=t.get("length"),h=Number(p);Number.isInteger(h)&&h<_.v&&C(_,h)}C(d,z),lr(o)}return!0},get(u,p,d){var T;if(p===me)return e;var _=t.get(p),h=p in u;if(_===void 0&&(!h||(T=ke(u,p))!=null&&T.writable)&&(_=a(()=>{var y=ce(h?u[p]:z),k=x(y);return k}),t.set(p,_)),_!==void 0){var f=F(_);return f===z?void 0:f}return Reflect.get(u,p,d)},getOwnPropertyDescriptor(u,p){var d=Reflect.getOwnPropertyDescriptor(u,p);if(d&&"value"in d){var _=t.get(p);_&&(d.value=F(_))}else if(d===void 0){var h=t.get(p),f=h==null?void 0:h.v;if(h!==void 0&&f!==z)return{enumerable:!0,configurable:!0,value:f,writable:!0}}return d},has(u,p){var f;if(p===me)return!0;var d=t.get(p),_=d!==void 0&&d.v!==z||Reflect.has(u,p);if(d!==void 0||S!==null&&(!_||(f=ke(u,p))!=null&&f.writable)){d===void 0&&(d=a(()=>{var T=_?ce(u[p]):z,y=x(T);return y}),t.set(p,d));var h=F(d);if(h===z)return!1}return _},set(u,p,d,_){var U;var h=t.get(p),f=p in u;if(s&&p==="length")for(var T=d;T<h.v;T+=1){var y=t.get(T+"");y!==void 0?C(y,z):T in u&&(y=a(()=>x(z)),t.set(T+"",y))}if(h===void 0)(!f||(U=ke(u,p))!=null&&U.writable)&&(h=a(()=>x(void 0)),C(h,ce(d)),t.set(p,h));else{f=h.v!==z;var k=a(()=>ce(d));C(h,k)}var b=Reflect.getOwnPropertyDescriptor(u,p);if(b!=null&&b.set&&b.set.call(_,d),!f){if(s&&typeof p=="string"){var O=t.get("length"),D=Number(p);Number.isInteger(D)&&D>=O.v&&C(O,D+1)}lr(o)}return!0},ownKeys(u){F(o);var p=Reflect.ownKeys(u).filter(h=>{var f=t.get(h);return f===void 0||f.v!==z});for(var[d,_]of t)_.v!==z&&!(d in u)&&p.push(d);return p},setPrototypeOf(){fo()}})}function lr(e,r=1){C(e,e.v+r)}function Oe(e){var r=Z|ae,t=R!==null&&(R.f&Z)!==0?R:null;return S===null||t!==null&&(t.f&Y)!==0?r|=Y:S.f|=Vt,{ctx:L,deps:null,effects:null,equals:zt,f:r,fn:e,reactions:null,rv:0,v:null,wv:0,parent:t??S}}function Ro(e){const r=Oe(e);return hs(r),r}function Kt(e){const r=Oe(e);return r.equals=Fr,r}function Yt(e){var r=e.effects;if(r!==null){e.effects=null;for(var t=0;t<r.length;t+=1)Te(r[t])}}function Ao(e){for(var r=e.parent;r!==null;){if((r.f&Z)===0)return r;r=r.parent}return null}function Qt(e){var r,t=S;pe(Ao(e));try{Yt(e),r=Es(e)}finally{pe(t)}return r}function Jt(e){var r=Qt(e);if(e.equals(r)||(e.v=r,e.wv=fs()),!Se){var t=(le||(e.f&Y)!==0)&&e.deps!==null?ve:X;oe(e,t)}}const qe=new Map;function Ur(e,r){var t={f:0,v:e,reactions:null,equals:zt,rv:0,wv:0};return t}function x(e,r){const t=Ur(e);return hs(t),t}function So(e,r=!1,t=!0){var o;const s=Ur(e);return r||(s.equals=Fr),xe&&t&&L!==null&&L.l!==null&&((o=L.l).s??(o.s=[])).push(s),s}function C(e,r,t=!1){R!==null&&!te&&je()&&(R.f&(Z|Rr))!==0&&!(j!=null&&j[1].includes(e)&&j[0]===R)&&_o();let s=t?ce(r):r;return Fo(e,s)}function Fo(e,r){if(!e.equals(r)){var t=e.v;Se?qe.set(e,r):qe.set(e,t),e.v=r,(e.f&Z)!==0&&((e.f&ae)!==0&&Qt(e),oe(e,(e.f&Y)===0?X:ve)),e.wv=fs(),Xt(e,ae),je()&&S!==null&&(S.f&X)!==0&&(S.f&(de|Re))===0&&(J===null?Ho([e]):J.push(e))}return r}function Xt(e,r){var t=e.reactions;if(t!==null)for(var s=je(),o=t.length,i=0;i<o;i++){var a=t[i],u=a.f;(u&ae)===0&&(!s&&a===S||(oe(a,r),(u&(X|Y))!==0&&((u&Z)!==0?Xt(a,ve):jr(a))))}}var ht,Zt,es,rs;function Co(){if(ht===void 0){ht=window,Zt=/Firefox/.test(navigator.userAgent);var e=Element.prototype,r=Node.prototype,t=Text.prototype;es=ke(r,"firstChild").get,rs=ke(r,"nextSibling").get,dt(e)&&(e.__click=void 0,e.__className=void 0,e.__attributes=null,e.__style=void 0,e.__e=void 0),dt(t)&&(t.__t=void 0)}}function Do(e=""){return document.createTextNode(e)}function Qe(e){return es.call(e)}function Lr(e){return rs.call(e)}function ie(e,r){return Qe(e)}function ts(e,r){{var t=Qe(e);return t instanceof Comment&&t.data===""?Lr(t):t}}function fe(e,r=1,t=!1){let s=e;for(;r--;)s=Lr(s);return s}function ss(e){S===null&&R===null&&po(),R!==null&&(R.f&Y)!==0&&S===null&&lo(),Se&&co()}function Uo(e,r){var t=r.last;t===null?r.last=r.first=e:(t.next=e,e.prev=t,r.last=e)}function Ae(e,r,t,s=!0){var o=S,i={ctx:L,deps:null,nodes_start:null,nodes_end:null,f:e|ae,first:null,fn:r,last:null,next:null,parent:o,prev:null,teardown:null,transitions:null,wv:0};if(t)try{xr(i),i.f|=Mt}catch(p){throw Te(i),p}else r!==null&&jr(i);var a=t&&i.deps===null&&i.first===null&&i.nodes_start===null&&i.teardown===null&&(i.f&(Vt|Ar))===0;if(!a&&s&&(o!==null&&Uo(i,o),R!==null&&(R.f&Z)!==0)){var u=R;(u.effects??(u.effects=[])).push(i)}return i}function os(e){const r=Ae(rr,null,!1);return oe(r,X),r.teardown=e,r}function mt(e){ss();var r=S!==null&&(S.f&de)!==0&&L!==null&&!L.m;if(r){var t=L;(t.e??(t.e=[])).push({fn:e,effect:S,reaction:R})}else{var s=Ir(e);return s}}function Lo(e){return ss(),qr(e)}function Io(e){const r=Ae(Re,e,!0);return(t={})=>new Promise(s=>{t.outro?ls(r,()=>{Te(r),s(void 0)}):(Te(r),s(void 0))})}function Ir(e){return Ae(Ht,e,!1)}function qr(e){return Ae(rr,e,!0)}function qo(e,r=[],t=Oe){const s=r.map(t);return ns(()=>e(...s.map(F)))}function ns(e,r=0){return Ae(rr|Rr|r,e,!0)}function is(e,r=!0){return Ae(rr|de,e,!0,r)}function as(e){var r=e.teardown;if(r!==null){const t=Se,s=R;ft(!0),se(null);try{r.call(null)}finally{ft(t),se(s)}}}function us(e,r=!1){var t=e.first;for(e.first=e.last=null;t!==null;){var s=t.next;(t.f&Re)!==0?t.parent=null:Te(t,r),t=s}}function xo(e){for(var r=e.first;r!==null;){var t=r.next;(r.f&de)===0&&Te(r),r=t}}function Te(e,r=!0){var t=!1;(r||(e.f&io)!==0)&&e.nodes_start!==null&&e.nodes_end!==null&&(jo(e.nodes_start,e.nodes_end),t=!0),us(e,r&&!t),er(e,0),oe(e,Sr);var s=e.transitions;if(s!==null)for(const i of s)i.stop();as(e);var o=e.parent;o!==null&&o.first!==null&&cs(e),e.next=e.prev=e.teardown=e.ctx=e.deps=e.fn=e.nodes_start=e.nodes_end=null}function jo(e,r){for(;e!==null;){var t=e===r?null:Lr(e);e.remove(),e=t}}function cs(e){var r=e.parent,t=e.prev,s=e.next;t!==null&&(t.next=s),s!==null&&(s.prev=t),r!==null&&(r.first===e&&(r.first=s),r.last===e&&(r.last=t))}function ls(e,r){var t=[];ps(e,t,!0),$o(t,()=>{Te(e),r&&r()})}function $o(e,r){var t=e.length;if(t>0){var s=()=>--t||r();for(var o of e)o.out(s)}else r()}function ps(e,r,t){if((e.f&Ye)===0){if(e.f^=Ye,e.transitions!==null)for(const a of e.transitions)(a.is_global||t)&&r.push(a);for(var s=e.first;s!==null;){var o=s.next,i=(s.f&Wt)!==0||(s.f&de)!==0;ps(s,r,i?t:!1),s=o}}}let Je=[];function No(){var e=Je;Je=[],Tr(e)}function ds(e){Je.length===0&&queueMicrotask(No),Je.push(e)}function Bo(e){var r=S;if((r.f&Mt)===0){if((r.f&Ar)===0)throw e;r.fn(e)}else gs(e,r)}function gs(e,r){for(;r!==null;){if((r.f&Ar)!==0)try{r.fn(e);return}catch{}r=r.parent}throw e}let wr=!1,Xe=null,_e=!1,Se=!1;function ft(e){Se=e}let Ve=[];let R=null,te=!1;function se(e){R=e}let S=null;function pe(e){S=e}let j=null;function hs(e){R!==null&&R.f&vr&&(j===null?j=[R,[e]]:j[1].push(e))}let M=null,K=0,J=null;function Ho(e){J=e}let ms=1,Ze=0,le=!1;function fs(){return++ms}function tr(e){var h;var r=e.f;if((r&ae)!==0)return!0;if((r&ve)!==0){var t=e.deps,s=(r&Y)!==0;if(t!==null){var o,i,a=(r&Ke)!==0,u=s&&S!==null&&!le,p=t.length;if(a||u){var d=e,_=d.parent;for(o=0;o<p;o++)i=t[o],(a||!((h=i==null?void 0:i.reactions)!=null&&h.includes(d)))&&(i.reactions??(i.reactions=[])).push(d);a&&(d.f^=Ke),u&&_!==null&&(_.f&Y)===0&&(d.f^=Y)}for(o=0;o<p;o++)if(i=t[o],tr(i)&&Jt(i),i.wv>e.wv)return!0}(!s||S!==null&&!le)&&oe(e,X)}return!1}function _s(e,r,t=!0){var s=e.reactions;if(s!==null)for(var o=0;o<s.length;o++){var i=s[o];j!=null&&j[1].includes(e)&&j[0]===R||((i.f&Z)!==0?_s(i,r,!1):r===i&&(t?oe(i,ae):(i.f&X)!==0&&oe(i,ve),jr(i)))}}function Es(e){var T;var r=M,t=K,s=J,o=R,i=le,a=j,u=L,p=te,d=e.f;M=null,K=0,J=null,le=(d&Y)!==0&&(te||!_e||R===null),R=(d&(de|Re))===0?e:null,j=null,gt(e.ctx),te=!1,Ze++,e.f|=vr;try{var _=(0,e.fn)(),h=e.deps;if(M!==null){var f;if(er(e,K),h!==null&&K>0)for(h.length=K+M.length,f=0;f<M.length;f++)h[K+f]=M[f];else e.deps=h=M;if(!le)for(f=K;f<h.length;f++)((T=h[f]).reactions??(T.reactions=[])).push(e)}else h!==null&&K<h.length&&(er(e,K),h.length=K);if(je()&&J!==null&&!te&&h!==null&&(e.f&(Z|ve|ae))===0)for(f=0;f<J.length;f++)_s(J[f],e);return o!==null&&o!==e&&(Ze++,J!==null&&(s===null?s=J:s.push(...J))),_}catch(y){Bo(y)}finally{M=r,K=t,J=s,R=o,le=i,j=a,gt(u),te=p,e.f^=vr}}function Mo(e,r){let t=r.reactions;if(t!==null){var s=Xs.call(t,e);if(s!==-1){var o=t.length-1;o===0?t=r.reactions=null:(t[s]=t[o],t.pop())}}t===null&&(r.f&Z)!==0&&(M===null||!M.includes(r))&&(oe(r,ve),(r.f&(Y|Ke))===0&&(r.f^=Ke),Yt(r),er(r,0))}function er(e,r){var t=e.deps;if(t!==null)for(var s=r;s<t.length;s++)Mo(e,t[s])}function xr(e){var r=e.f;if((r&Sr)===0){oe(e,X);var t=S,s=_e;S=e,_e=!0;try{(r&Rr)!==0?xo(e):us(e),as(e);var o=Es(e);e.teardown=typeof o=="function"?o:null,e.wv=ms;var i;pt&&Eo&&(e.f&ae)!==0&&e.deps}finally{_e=s,S=t}}}function Wo(){try{go()}catch(e){if(Xe!==null)gs(e,Xe);else throw e}}function Vo(){var e=_e;try{var r=0;for(_e=!0;Ve.length>0;){r++>1e3&&Wo();var t=Ve,s=t.length;Ve=[];for(var o=0;o<s;o++){var i=Ko(t[o]);zo(i)}qe.clear()}}finally{wr=!1,_e=e,Xe=null}}function zo(e){var r=e.length;if(r!==0)for(var t=0;t<r;t++){var s=e[t];(s.f&(Sr|Ye))===0&&tr(s)&&(xr(s),s.deps===null&&s.first===null&&s.nodes_start===null&&(s.teardown===null?cs(s):s.fn=null))}}function jr(e){wr||(wr=!0,queueMicrotask(Vo));for(var r=Xe=e;r.parent!==null;){r=r.parent;var t=r.f;if((t&(Re|de))!==0){if((t&X)===0)return;r.f^=X}}Ve.push(r)}function Ko(e){for(var r=[],t=e;t!==null;){var s=t.f,o=(s&(de|Re))!==0,i=o&&(s&X)!==0;if(!i&&(s&Ye)===0){(s&Ht)!==0?r.push(t):o?t.f^=X:tr(t)&&xr(t);var a=t.first;if(a!==null){t=a;continue}}var u=t.parent;for(t=t.next;t===null&&u!==null;)t=u.next,u=u.parent}return r}function F(e){var r=e.f,t=(r&Z)!==0;if(R!==null&&!te){if(!(j!=null&&j[1].includes(e))||j[0]!==R){var s=R.deps;e.rv<Ze&&(e.rv=Ze,M===null&&s!==null&&s[K]===e?K++:M===null?M=[e]:(!le||!M.includes(e))&&M.push(e))}}else if(t&&e.deps===null&&e.effects===null){var o=e,i=o.parent;i!==null&&(i.f&Y)===0&&(o.f^=Y)}return t&&(o=e,tr(o)&&Jt(o)),Se&&qe.has(e)?qe.get(e):e.v}function Ge(e){var r=te;try{return te=!0,e()}finally{te=r}}const Yo=-7169;function oe(e,r){e.f=e.f&Yo|r}function Ts(e){if(!(typeof e!="object"||!e||e instanceof EventTarget)){if(me in e)br(e);else if(!Array.isArray(e))for(let r in e){const t=e[r];typeof t=="object"&&t&&me in t&&br(t)}}}function br(e,r=new Set){if(typeof e=="object"&&e!==null&&!(e instanceof EventTarget)&&!r.has(e)){r.add(e),e instanceof Date&&e.getTime();for(let s in e)try{br(e[s],r)}catch{}const t=Gr(e);if(t!==Object.prototype&&t!==Array.prototype&&t!==Map.prototype&&t!==Set.prototype&&t!==Date.prototype){const s=Bt(t);for(let o in s){const i=s[o].get;if(i)try{i.call(e)}catch{}}}}}const Qo=["touchstart","touchmove"];function Jo(e){return Qo.includes(e)}let _t=!1;function Xo(){_t||(_t=!0,document.addEventListener("reset",e=>{Promise.resolve().then(()=>{var r;if(!e.defaultPrevented)for(const t of e.target.elements)(r=t.__on_r)==null||r.call(t)})},{capture:!0}))}function vs(e){var r=R,t=S;se(null),pe(null);try{return e()}finally{se(r),pe(t)}}function Zo(e,r,t,s=t){e.addEventListener(r,()=>vs(t));const o=e.__on_r;o?e.__on_r=()=>{o(),s(!0)}:e.__on_r=()=>s(!0),Xo()}const ws=new Set,yr=new Set;function en(e,r,t,s={}){function o(i){if(s.capture||Ue.call(r,i),!i.cancelBubble)return vs(()=>t==null?void 0:t.call(this,i))}return e.startsWith("pointer")||e.startsWith("touch")||e==="wheel"?ds(()=>{r.addEventListener(e,o,s)}):r.addEventListener(e,o,s),o}function Ce(e,r,t,s,o){var i={capture:s,passive:o},a=en(e,r,t,i);(r===document.body||r===window||r===document||r instanceof HTMLMediaElement)&&os(()=>{r.removeEventListener(e,a,i)})}function $r(e){for(var r=0;r<e.length;r++)ws.add(e[r]);for(var t of yr)t(e)}function Ue(e){var D;var r=this,t=r.ownerDocument,s=e.type,o=((D=e.composedPath)==null?void 0:D.call(e))||[],i=o[0]||e.target,a=0,u=e.__root;if(u){var p=o.indexOf(u);if(p!==-1&&(r===document||r===window)){e.__root=r;return}var d=o.indexOf(r);if(d===-1)return;p<=d&&(a=p)}if(i=o[a]||e.target,i!==r){eo(e,"currentTarget",{configurable:!0,get(){return i||t}});var _=R,h=S;se(null),pe(null);try{for(var f,T=[];i!==null;){var y=i.assignedSlot||i.parentNode||i.host||null;try{var k=i["__"+s];if(k!=null&&(!i.disabled||e.target===i))if(Nt(k)){var[b,...O]=k;b.apply(i,[e,...O])}else k.call(i,e)}catch(U){f?T.push(U):f=U}if(e.cancelBubble||y===r||y===null)break;i=y}if(f){for(let U of T)queueMicrotask(()=>{throw U});throw f}}finally{e.__root=r,delete e.currentTarget,se(_),pe(h)}}}function rn(e){var r=document.createElement("template");return r.innerHTML=e.replaceAll("<!>","<!---->"),r.content}function Et(e,r){var t=S;t.nodes_start===null&&(t.nodes_start=e,t.nodes_end=r)}function Nr(e,r){var t=(r&ko)!==0,s=(r&Oo)!==0,o,i=!e.startsWith("<!>");return()=>{o===void 0&&(o=rn(i?e:"<!>"+e),t||(o=Qe(o)));var a=s||Zt?document.importNode(o,!0):o.cloneNode(!0);if(t){var u=Qe(a),p=a.lastChild;Et(u,p)}else Et(a,a);return a}}function Br(e,r){e!==null&&e.before(r)}function tn(e,r){return sn(e,r)}const we=new Map;function sn(e,{target:r,anchor:t,props:s={},events:o,context:i,intro:a=!0}){Co();var u=new Set,p=h=>{for(var f=0;f<h.length;f++){var T=h[f];if(!u.has(T)){u.add(T);var y=Jo(T);r.addEventListener(T,Ue,{passive:y});var k=we.get(T);k===void 0?(document.addEventListener(T,Ue,{passive:y}),we.set(T,1)):we.set(T,k+1)}}};p(Zs(ws)),yr.add(p);var d=void 0,_=Io(()=>{var h=t??r.appendChild(Do());return is(()=>{if(i){Cr({});var f=L;f.c=i}o&&(s.$$events=o),d=e(h,s)||{},i&&Dr()}),()=>{var y;for(var f of u){r.removeEventListener(f,Ue);var T=we.get(f);--T===0?(document.removeEventListener(f,Ue),we.delete(f)):we.set(f,T)}yr.delete(p),h!==t&&((y=h.parentNode)==null||y.removeChild(h))}});return on.set(d,_),d}let on=new WeakMap;function nn(e,r,t){var s=e,o,i;ns(()=>{o!==(o=r())&&(i&&(ls(i),i=null),o&&(i=is(()=>t(s,o))))},Wt)}function an(e,r){return e==null?null:String(e)}function un(e,r,t,s){var o=e.__style;if(o!==r){var i=an(r);i==null?e.removeAttribute("style"):e.style.cssText=i,e.__style=r}return s}const cn=Symbol("is custom element"),ln=Symbol("is html");function pn(e,r,t,s){var o=dn(e);o[r]!==(o[r]=t)&&(t==null?e.removeAttribute(r):typeof t!="string"&&gn(e).includes(r)?e[r]=t:e.setAttribute(r,t))}function dn(e){return e.__attributes??(e.__attributes={[cn]:e.nodeName.includes("-"),[ln]:e.namespaceURI===Go})}var Tt=new Map;function gn(e){var r=Tt.get(e.nodeName);if(r)return r;Tt.set(e.nodeName,r=[]);for(var t,s=e,o=Element.prototype;o!==s;){t=Bt(s);for(var i in t)t[i].set&&r.push(i);s=Gr(s)}return r}function bs(e,r,t=r){var s=je();Zo(e,"input",o=>{var i=o?e.defaultValue:e.value;if(i=pr(e)?dr(i):i,t(i),s&&i!==(i=r())){var a=e.selectionStart,u=e.selectionEnd;e.value=i??"",u!==null&&(e.selectionStart=a,e.selectionEnd=Math.min(u,e.value.length))}}),Ge(r)==null&&e.value&&t(pr(e)?dr(e.value):e.value),qr(()=>{var o=r();pr(e)&&o===dr(e.value)||e.type==="date"&&!o&&!e.value||o!==e.value&&(e.value=o??"")})}function pr(e){var r=e.type;return r==="number"||r==="range"}function dr(e){return e===""?null:+e}function vt(e,r){return e===r||(e==null?void 0:e[me])===r}function wt(e={},r,t,s){return Ir(()=>{var o,i;return qr(()=>{o=i,i=[],Ge(()=>{e!==t(...i)&&(r(e,...i),o&&vt(t(...o),e)&&r(null,...o))})}),()=>{ds(()=>{i&&vt(t(...i),e)&&r(null,...i)})}}),e}function hn(e=!1){const r=L,t=r.l.u;if(!t)return;let s=()=>Ts(r.s);if(e){let o=0,i={};const a=Oe(()=>{let u=!1;const p=r.s;for(const d in p)p[d]!==i[d]&&(i[d]=p[d],u=!0);return u&&o++,o});s=()=>F(a)}t.b.length&&Lo(()=>{bt(r,s),Tr(t.b)}),mt(()=>{const o=Ge(()=>t.m.map(so));return()=>{for(const i of o)typeof i=="function"&&i()}}),t.a.length&&mt(()=>{bt(r,s),Tr(t.a)})}function bt(e,r){if(e.l.s)for(const t of e.l.s)F(t);r()}let He=!1;function mn(e){var r=He;try{return He=!1,[e(),He]}finally{He=r}}function yt(e){var r;return((r=e.ctx)==null?void 0:r.d)??!1}function Me(e,r,t,s){var W;var o=(t&vo)!==0,i=!xe||(t&wo)!==0,a=(t&yo)!==0,u=(t&Po)!==0,p=!1,d;a?[d,p]=mn(()=>e[r]):d=e[r];var _=me in e||ao in e,h=a&&(((W=ke(e,r))==null?void 0:W.set)??(_&&r in e&&(P=>e[r]=P)))||void 0,f=s,T=!0,y=!1,k=()=>(y=!0,T&&(T=!1,u?f=Ge(s):f=s),f);d===void 0&&s!==void 0&&(h&&i&&ho(),d=k(),h&&h(d));var b;if(i)b=()=>{var P=e[r];return P===void 0?k():(T=!0,y=!1,P)};else{var O=(o?Oe:Kt)(()=>e[r]);O.f|=no,b=()=>{var P=F(O);return P!==void 0&&(f=void 0),P===void 0?f:P}}if((t&bo)===0&&i)return b;if(h){var D=e.$$legacy;return function(P,H){return arguments.length>0?((!i||!H||D||p)&&h(H?b():P),P):b()}}var U=!1,V=So(d),I=Oe(()=>{var P=b(),H=F(V);return U?(U=!1,H):V.v=P});return a&&F(I),o||(I.equals=Fr),function(P,H){if(arguments.length>0){const ne=H?F(I):i&&a?ce(P):P;if(!I.equals(ne)){if(U=!0,C(V,ne),y&&f!==void 0&&(f=ne),yt(I))return P;Ge(()=>F(I))}return P}return yt(I)?I.v:F(I)}}const fn="5";var $t;typeof window<"u"&&(($t=window.__svelte??(window.__svelte={})).v??($t.v=new Set)).add(fn);function sr(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function ys(e,r,t,s){if(typeof t!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(r)?r.reverse().reduce((o,i)=>ys.bind(null,e,i,o,s),t)():Promise.resolve().then(()=>e.registry[r]?e.registry[r].reduce((o,i)=>i.hook.bind(null,o,s),t)():t(s))}function _n(e,r,t,s){const o=s;e.registry[t]||(e.registry[t]=[]),r==="before"&&(s=(i,a)=>Promise.resolve().then(o.bind(null,a)).then(i.bind(null,a))),r==="after"&&(s=(i,a)=>{let u;return Promise.resolve().then(i.bind(null,a)).then(p=>(u=p,o(u,a))).then(()=>u)}),r==="error"&&(s=(i,a)=>Promise.resolve().then(i.bind(null,a)).catch(u=>o(u,a))),e.registry[t].push({hook:s,orig:o})}function En(e,r,t){if(!e.registry[r])return;const s=e.registry[r].map(o=>o.orig).indexOf(t);s!==-1&&e.registry[r].splice(s,1)}const Pt=Function.bind,kt=Pt.bind(Pt);function Tn(e,r,t){const s=kt(En,null).apply(null,[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(o=>{const i=[r,o];e[o]=e.api[o]=kt(_n,null).apply(null,i)})}function vn(){const e={registry:{}},r=ys.bind(null,e);return Tn(r,e),r}const wn={Collection:vn};var bn="0.0.0-development",yn=`octokit-endpoint.js/${bn} ${sr()}`,Pn={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":yn},mediaType:{format:""}};function kn(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function On(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function Ps(e,r){const t=Object.assign({},e);return Object.keys(r).forEach(s=>{On(r[s])?s in e?t[s]=Ps(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})}),t}function Ot(e){for(const r in e)e[r]===void 0&&delete e[r];return e}function Pr(e,r,t){var o;if(typeof r=="string"){let[i,a]=r.split(" ");t=Object.assign(a?{method:i,url:a}:{url:i},t)}else t=Object.assign({},r);t.headers=kn(t.headers),Ot(t),Ot(t.headers);const s=Ps(e||{},t);return t.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(i=>!s.mediaType.previews.includes(i)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),s}function Gn(e,r){const t=/\?/.test(e)?"&":"?",s=Object.keys(r);return s.length===0?e:e+t+s.map(o=>o==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(r[o])}`).join("&")}var Rn=/\{[^{}}]+\}/g;function An(e){return e.replace(new RegExp("(?:^\\W+)|(?:(?<!\\W)\\W+$)","g"),"").split(/,/)}function Sn(e){const r=e.match(Rn);return r?r.map(An).reduce((t,s)=>t.concat(s),[]):[]}function Gt(e,r){const t={__proto__:null};for(const s of Object.keys(e))r.indexOf(s)===-1&&(t[s]=e[s]);return t}function ks(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function Pe(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function De(e,r,t){return r=e==="+"||e==="#"?ks(r):Pe(r),t?Pe(t)+"="+r:r}function be(e){return e!=null}function gr(e){return e===";"||e==="&"||e==="?"}function Fn(e,r,t,s){var o=e[t],i=[];if(be(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),i.push(De(r,o,gr(r)?t:""));else if(s==="*")Array.isArray(o)?o.filter(be).forEach(function(a){i.push(De(r,a,gr(r)?t:""))}):Object.keys(o).forEach(function(a){be(o[a])&&i.push(De(r,o[a],a))});else{const a=[];Array.isArray(o)?o.filter(be).forEach(function(u){a.push(De(r,u))}):Object.keys(o).forEach(function(u){be(o[u])&&(a.push(Pe(u)),a.push(De(r,o[u].toString())))}),gr(r)?i.push(Pe(t)+"="+a.join(",")):a.length!==0&&i.push(a.join(","))}else r===";"?be(o)&&i.push(Pe(t)):o===""&&(r==="&"||r==="?")?i.push(Pe(t)+"="):o===""&&i.push("");return i}function Cn(e){return{expand:Dn.bind(null,e)}}function Dn(e,r){var t=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,i){if(o){let u="";const p=[];if(t.indexOf(o.charAt(0))!==-1&&(u=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(d){var _=/([^:\*]*)(?::(\d+)|(\*))?/.exec(d);p.push(Fn(r,u,_[1],_[2]||_[3]))}),u&&u!=="+"){var a=",";return u==="?"?a="&":u!=="#"&&(a=u),(p.length!==0?u:"")+p.join(a)}else return p.join(",")}else return ks(i)}),e==="/"?e:e.replace(/\/$/,"")}function Os(e){var _;let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,i=Gt(e,["method","baseUrl","url","headers","request","mediaType"]);const a=Sn(t);t=Cn(t).expand(i),/^http/.test(t)||(t=e.baseUrl+t);const u=Object.keys(e).filter(h=>a.includes(h)).concat("baseUrl"),p=Gt(i,u);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(h=>h.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(_=e.mediaType.previews)!=null&&_.length)){const h=s.accept.match(new RegExp("(?<![\\w-])[\\w-]+(?=-preview)","g"))||[];s.accept=h.concat(e.mediaType.previews).map(f=>{const T=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${f}-preview${T}`}).join(",")}return["GET","HEAD"].includes(r)?t=Gn(t,p):"data"in p?o=p.data:Object.keys(p).length&&(o=p),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof o>"u"&&(o=""),Object.assign({method:r,url:t,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function Un(e,r,t){return Os(Pr(e,r,t))}function Gs(e,r){const t=Pr(e,r),s=Un.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:Gs.bind(null,t),merge:Pr.bind(null,t),parse:Os})}var Ln=Gs(null,Pn),Rt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function In(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var ye={},At;function qn(){if(At)return ye;At=1;const e=function(){};e.prototype=Object.create(null);const r=/; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu,t=/\\([\v\u0020-\u00ff])/gu,s=/^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u,o={type:"",parameters:new e};Object.freeze(o.parameters),Object.freeze(o);function i(u){if(typeof u!="string")throw new TypeError("argument header is required and must be a string");let p=u.indexOf(";");const d=p!==-1?u.slice(0,p).trim():u.trim();if(s.test(d)===!1)throw new TypeError("invalid media type");const _={type:d.toLowerCase(),parameters:new e};if(p===-1)return _;let h,f,T;for(r.lastIndex=p;f=r.exec(u);){if(f.index!==p)throw new TypeError("invalid parameter format");p+=f[0].length,h=f[1].toLowerCase(),T=f[2],T[0]==='"'&&(T=T.slice(1,T.length-1),t.test(T)&&(T=T.replace(t,"$1"))),_.parameters[h]=T}if(p!==u.length)throw new TypeError("invalid parameter format");return _}function a(u){if(typeof u!="string")return o;let p=u.indexOf(";");const d=p!==-1?u.slice(0,p).trim():u.trim();if(s.test(d)===!1)return o;const _={type:d.toLowerCase(),parameters:new e};if(p===-1)return _;let h,f,T;for(r.lastIndex=p;f=r.exec(u);){if(f.index!==p)return o;p+=f[0].length,h=f[1].toLowerCase(),T=f[2],T[0]==='"'&&(T=T.slice(1,T.length-1),t.test(T)&&(T=T.replace(t,"$1"))),_.parameters[h]=T}return p!==u.length?o:_}return ye.default={parse:i,safeParse:a},ye.parse=i,ye.safeParse=a,ye.defaultContentType=o,ye}var xn=qn();class Le extends Error{constructor(t,s,o){super(t);q(this,"name");q(this,"status");q(this,"request");q(this,"response");this.name="HttpError",this.status=Number.parseInt(s),Number.isNaN(this.status)&&(this.status=0),"response"in o&&(this.response=o.response);const i=Object.assign({},o.request);o.request.headers.authorization&&(i.headers=Object.assign({},o.request.headers,{authorization:o.request.headers.authorization.replace(new RegExp("(?<! ) .*$")," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i}}var jn="10.0.3",$n={headers:{"user-agent":`octokit-request.js/${jn} ${sr()}`}};function Nn(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}async function St(e){var h,f,T,y,k;const r=((h=e.request)==null?void 0:h.fetch)||globalThis.fetch;if(!r)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const t=((f=e.request)==null?void 0:f.log)||console,s=((T=e.request)==null?void 0:T.parseSuccessResponseBody)!==!1,o=Nn(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,i=Object.fromEntries(Object.entries(e.headers).map(([b,O])=>[b,String(O)]));let a;try{a=await r(e.url,{method:e.method,body:o,redirect:(y=e.request)==null?void 0:y.redirect,headers:i,signal:(k=e.request)==null?void 0:k.signal,...e.body&&{duplex:"half"}})}catch(b){let O="Unknown Error";if(b instanceof Error){if(b.name==="AbortError")throw b.status=500,b;O=b.message,b.name==="TypeError"&&"cause"in b&&(b.cause instanceof Error?O=b.cause.message:typeof b.cause=="string"&&(O=b.cause))}const D=new Le(O,500,{request:e});throw D.cause=b,D}const u=a.status,p=a.url,d={};for(const[b,O]of a.headers)d[b]=O;const _={url:p,status:u,headers:d,data:""};if("deprecation"in d){const b=d.link&&d.link.match(/<([^<>]+)>; rel="deprecation"/),O=b&&b.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${d.sunset}${O?`. See ${O}`:""}`)}if(u===204||u===205)return _;if(e.method==="HEAD"){if(u<400)return _;throw new Le(a.statusText,u,{response:_,request:e})}if(u===304)throw _.data=await hr(a),new Le("Not modified",u,{response:_,request:e});if(u>=400)throw _.data=await hr(a),new Le(Hn(_.data),u,{response:_,request:e});return _.data=s?await hr(a):a.body,_}async function hr(e){var s;const r=e.headers.get("content-type");if(!r)return e.text().catch(()=>"");const t=xn.safeParse(r);if(Bn(t)){let o="";try{return o=await e.text(),JSON.parse(o)}catch{return o}}else return t.type.startsWith("text/")||((s=t.parameters.charset)==null?void 0:s.toLowerCase())==="utf-8"?e.text().catch(()=>""):e.arrayBuffer().catch(()=>new ArrayBuffer(0))}function Bn(e){return e.type==="application/json"||e.type==="application/scim+json"}function Hn(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const r="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(t=>JSON.stringify(t)).join(", ")}${r}`:`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function kr(e,r){const t=e.defaults(r);return Object.assign(function(o,i){const a=t.merge(o,i);if(!a.request||!a.request.hook)return St(t.parse(a));const u=(p,d)=>St(t.parse(t.merge(p,d)));return Object.assign(u,{endpoint:t,defaults:kr.bind(null,t)}),a.request.hook(u,a)},{endpoint:t,defaults:kr.bind(null,t)})}var Or=kr(Ln,$n),Mn="0.0.0-development";function Wn(e){return`Request failed due to following response errors:
`+e.errors.map(r=>` - ${r.message}`).join(`
`)}var Vn=class extends Error{constructor(r,t,s){super(Wn(s));q(this,"name","GraphqlResponseError");q(this,"errors");q(this,"data");this.request=r,this.headers=t,this.response=s,this.errors=s.errors,this.data=s.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},zn=["method","baseUrl","url","headers","request","query","mediaType","operationName"],Kn=["query","method","url"],Ft=/\/api\/v3\/?$/;function Yn(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in t)if(Kn.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const s=typeof r=="string"?Object.assign({query:r},t):r,o=Object.keys(s).reduce((a,u)=>zn.includes(u)?(a[u]=s[u],a):(a.variables||(a.variables={}),a.variables[u]=s[u],a),{}),i=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Ft.test(i)&&(o.url=i.replace(Ft,"/api/graphql")),e(o).then(a=>{if(a.data.errors){const u={};for(const p of Object.keys(a.headers))u[p]=a.headers[p];throw new Vn(o,u,a.data)}return a.data.data})}function Hr(e,r){const t=e.defaults(r);return Object.assign((o,i)=>Yn(t,o,i),{defaults:Hr.bind(null,t),endpoint:t.endpoint})}Hr(Or,{headers:{"user-agent":`octokit-graphql.js/${Mn} ${sr()}`},method:"POST",url:"/graphql"});function Qn(e){return Hr(e,{method:"POST",url:"/graphql"})}var mr="(?:[a-zA-Z0-9_-]+)",Ct="\\.",Dt=new RegExp(`^${mr}${Ct}${mr}${Ct}${mr}$`),Jn=Dt.test.bind(Dt);async function Xn(e){const r=Jn(e),t=e.startsWith("v1.")||e.startsWith("ghs_"),s=e.startsWith("ghu_");return{type:"token",token:e,tokenType:r?"app":t?"installation":s?"user-to-server":"oauth"}}function Zn(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function ei(e,r,t,s){const o=r.endpoint.merge(t,s);return o.headers.authorization=Zn(e),r(o)}var ri=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(Xn.bind(null,r),{hook:ei.bind(null,r)})};const Rs="7.0.2",Ut=()=>{},ti=console.warn.bind(console),si=console.error.bind(console),Lt=`octokit-core.js/${Rs} ${sr()}`;var We;let oi=(We=class{constructor(r={}){q(this,"request");q(this,"graphql");q(this,"log");q(this,"hook");q(this,"auth");const t=new wn.Collection,s={baseUrl:Or.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=r.userAgent?`${r.userAgent} ${Lt}`:Lt,r.baseUrl&&(s.baseUrl=r.baseUrl),r.previews&&(s.mediaType.previews=r.previews),r.timeZone&&(s.headers["time-zone"]=r.timeZone),this.request=Or.defaults(s),this.graphql=Qn(this.request).defaults(s),this.log=Object.assign({debug:Ut,info:Ut,warn:ti,error:si},r.log),this.hook=t,r.authStrategy){const{authStrategy:i,...a}=r,u=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},r.auth));t.wrap("request",u.hook),this.auth=u}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=ri(r.auth);t.wrap("request",i.hook),this.auth=i}const o=this.constructor;for(let i=0;i<o.plugins.length;++i)Object.assign(this,o.plugins[i](this,r))}static defaults(r){return class extends this{constructor(...s){const o=s[0]||{};if(typeof r=="function"){super(r(o));return}super(Object.assign({},r,o,o.userAgent&&r.userAgent?{userAgent:`${o.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var o;const t=this.plugins;return o=class extends this{},q(o,"plugins",t.concat(r.filter(i=>!t.includes(i)))),o}},q(We,"VERSION",Rs),q(We,"plugins",[]),We);var ni="0.0.0-development";function ii(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)||"total_commits"in e.data))return e;const t=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count,i=e.data.total_commits;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count,delete e.data.total_commits;const a=Object.keys(e.data)[0],u=e.data[a];return e.data=u,typeof t<"u"&&(e.data.incomplete_results=t),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e.data.total_commits=i,e}function Mr(e,r,t){const s=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),o=typeof r=="function"?r:e.request,i=s.method,a=s.headers;let u=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!u)return{done:!0};try{const p=await o({method:i,url:u,headers:a}),d=ii(p);if(u=((d.headers.link||"").match(/<([^<>]+)>;\s*rel="next"/)||[])[1],!u&&"total_commits"in d.data){const _=new URL(d.url),h=_.searchParams,f=parseInt(h.get("page")||"1",10),T=parseInt(h.get("per_page")||"250",10);f*T<d.data.total_commits&&(h.set("page",String(f+1)),u=_.toString())}return{value:d}}catch(p){if(p.status!==409)throw p;return u="",{value:{status:200,headers:{},data:[]}}}}})}}function As(e,r,t,s){return typeof t=="function"&&(s=t,t=void 0),Ss(e,[],Mr(e,r,t)[Symbol.asyncIterator](),s)}function Ss(e,r,t,s){return t.next().then(o=>{if(o.done)return r;let i=!1;function a(){i=!0}return r=r.concat(s?s(o.value,a):o.value.data),i?r:Ss(e,r,t,s)})}Object.assign(As,{iterator:Mr});function Fs(e){return{paginate:Object.assign(As.bind(null,e),{iterator:Mr.bind(null,e)})}}Fs.VERSION=ni;var ai=(e,r)=>`The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,ui=class extends Error{constructor(r,t){super(ai(r.pathInQuery,t));q(this,"name","MissingCursorChangeError");this.pageInfo=r,this.cursorValue=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},ci=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`);q(this,"name","MissingPageInfo");this.response=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},li=e=>Object.prototype.toString.call(e)==="[object Object]";function Cs(e){const r=Ds(e,"pageInfo");if(r.length===0)throw new ci(e);return r}var Ds=(e,r,t=[])=>{for(const s of Object.keys(e)){const o=[...t,s],i=e[s];if(li(i)){if(i.hasOwnProperty(r))return o;const a=Ds(i,r,o);if(a.length>0)return a}}return[]},Ie=(e,r)=>r.reduce((t,s)=>t[s],e),fr=(e,r,t)=>{const s=r[r.length-1],o=[...r].slice(0,-1),i=Ie(e,o);typeof t=="function"?i[s]=t(i[s]):i[s]=t},pi=e=>{const r=Cs(e);return{pathInQuery:r,pageInfo:Ie(e,[...r,"pageInfo"])}},Us=e=>e.hasOwnProperty("hasNextPage"),di=e=>Us(e)?e.endCursor:e.startCursor,gi=e=>Us(e)?e.hasNextPage:e.hasPreviousPage,Ls=e=>(r,t={})=>{let s=!0,o={...t};return{[Symbol.asyncIterator]:()=>({async next(){if(!s)return{done:!0,value:{}};const i=await e.graphql(r,o),a=pi(i),u=di(a.pageInfo);if(s=gi(a.pageInfo),s&&u===o.cursor)throw new ui(a,u);return o={...o,cursor:u},{done:!1,value:i}}})}},hi=(e,r)=>{if(Object.keys(e).length===0)return Object.assign(e,r);const t=Cs(e),s=[...t,"nodes"],o=Ie(r,s);o&&fr(e,s,p=>[...p,...o]);const i=[...t,"edges"],a=Ie(r,i);a&&fr(e,i,p=>[...p,...a]);const u=[...t,"pageInfo"];return fr(e,u,Ie(r,u)),e},mi=e=>{const r=Ls(e);return async(t,s={})=>{let o={};for await(const i of r(t,s))o=hi(o,i);return o}};function fi(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(mi(e),{iterator:Ls(e)})})}}const _i="16.0.0",Ei={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addRepoAccessToSelfHostedRunnerGroupInOrg:["PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createHostedRunnerForOrg:["POST /orgs/{org}/actions/hosted-runners"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteHostedRunnerForOrg:["DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getHostedRunnerForOrg:["GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],getHostedRunnersGithubOwnedImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/github-owned"],getHostedRunnersLimitsForOrg:["GET /orgs/{org}/actions/hosted-runners/limits"],getHostedRunnersMachineSpecsForOrg:["GET /orgs/{org}/actions/hosted-runners/machine-sizes"],getHostedRunnersPartnerImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/partner"],getHostedRunnersPlatformsForOrg:["GET /orgs/{org}/actions/hosted-runners/platforms"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listGithubHostedRunnersInGroupForOrg:["GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners"],listHostedRunnersForOrg:["GET /orgs/{org}/actions/hosted-runners"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateHostedRunnerForOrg:["PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubBillingUsageReportOrg:["GET /organizations/{org}/settings/billing/usage"],getGithubBillingUsageReportUser:["GET /users/{username}/settings/billing/usage"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},campaigns:{createCampaign:["POST /orgs/{org}/campaigns"],deleteCampaign:["DELETE /orgs/{org}/campaigns/{campaign_number}"],getCampaignSummary:["GET /orgs/{org}/campaigns/{campaign_number}"],listOrgCampaigns:["GET /orgs/{org}/campaigns"],updateCampaign:["PATCH /orgs/{org}/campaigns/{campaign_number}"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{commitAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"],createAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],createVariantAnalysis:["POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"],deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],deleteCodeqlDatabase:["DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getAutofix:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],getVariantAnalysis:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"],getVariantAnalysisRepoTask:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codeSecurity:{attachConfiguration:["POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"],attachEnterpriseConfiguration:["POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"],createConfiguration:["POST /orgs/{org}/code-security/configurations"],createConfigurationForEnterprise:["POST /enterprises/{enterprise}/code-security/configurations"],deleteConfiguration:["DELETE /orgs/{org}/code-security/configurations/{configuration_id}"],deleteConfigurationForEnterprise:["DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],detachConfiguration:["DELETE /orgs/{org}/code-security/configurations/detach"],getConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}"],getConfigurationForRepository:["GET /repos/{owner}/{repo}/code-security-configuration"],getConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations"],getConfigurationsForOrg:["GET /orgs/{org}/code-security/configurations"],getDefaultConfigurations:["GET /orgs/{org}/code-security/configurations/defaults"],getDefaultConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/defaults"],getRepositoriesForConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"],getRepositoriesForEnterpriseConfiguration:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"],getSingleConfigurationForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],setConfigurationAsDefault:["PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"],setConfigurationAsDefaultForEnterprise:["PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"],updateConfiguration:["PATCH /orgs/{org}/code-security/configurations/{configuration_id}"],updateEnterpriseConfiguration:["PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],copilotMetricsForOrganization:["GET /orgs/{org}/copilot/metrics"],copilotMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"]},credentials:{revoke:["POST /credentials/revoke"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},hostedCompute:{createNetworkConfigurationForOrg:["POST /orgs/{org}/settings/network-configurations"],deleteNetworkConfigurationFromOrg:["DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkConfigurationForOrg:["GET /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkSettingsForOrg:["GET /orgs/{org}/settings/network-settings/{network_settings_id}"],listNetworkConfigurationsForOrg:["GET /orgs/{org}/settings/network-configurations"],updateNetworkConfigurationForOrg:["PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],addSubIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listSubIssues:["GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeSubIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"],reprioritizeSubIssue:["PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team"}],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createIssueType:["POST /orgs/{org}/issue-types"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteIssueType:["DELETE /orgs/{org}/issue-types/{issue_type_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}",{},{deprecated:"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization"}],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getOrgRulesetHistory:["GET /orgs/{org}/rulesets/{ruleset_id}/history"],getOrgRulesetVersion:["GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listAttestations:["GET /orgs/{org}/attestations/{subject_digest}"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listIssueTypes:["GET /orgs/{org}/issue-types"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers",{},{deprecated:"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams"}],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team"}],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateIssueType:["PUT /orgs/{org}/issue-types/{issue_type_id}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},privateRegistries:{createOrgPrivateRegistry:["POST /orgs/{org}/private-registries"],deleteOrgPrivateRegistry:["DELETE /orgs/{org}/private-registries/{secret_name}"],getOrgPrivateRegistry:["GET /orgs/{org}/private-registries/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/private-registries/public-key"],listOrgPrivateRegistries:["GET /orgs/{org}/private-registries"],updateOrgPrivateRegistry:["PATCH /orgs/{org}/private-registries/{secret_name}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAttestation:["POST /repos/{owner}/{repo}/attestations"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesetHistory:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history"],getRepoRulesetVersion:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAttestations:["GET /repos/{owner}/{repo}/attestations/{subject_digest}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues",{},{deprecated:"octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests"}],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{createPushProtectionBypass:["POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"],getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],getScanHistory:["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getById:["GET /user/{account_id}"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listAttestations:["GET /users/{username}/attestations/{subject_digest}"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var Ti=Ei;const Ee=new Map;for(const[e,r]of Object.entries(Ti))for(const[t,s]of Object.entries(r)){const[o,i,a]=s,[u,p]=o.split(/ /),d=Object.assign({method:u,url:p},i);Ee.has(e)||Ee.set(e,new Map),Ee.get(e).set(t,{scope:e,methodName:t,endpointDefaults:d,decorations:a})}const vi={has({scope:e},r){return Ee.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,r,t){return Object.defineProperty(e.cache,r,t),!0},deleteProperty(e,r){return delete e.cache[r],!0},ownKeys({scope:e}){return[...Ee.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},s){if(t[s])return t[s];const o=Ee.get(r).get(s);if(!o)return;const{endpointDefaults:i,decorations:a}=o;return a?t[s]=bi(e,r,s,i,a):t[s]=e.request.defaults(i),t[s]}};function wi(e){const r={};for(const t of Ee.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},vi);return r}function bi(e,r,t,s,o){const i=e.request.defaults(s);function a(...u){let p=i.endpoint.merge(...u);if(o.mapToData)return p=Object.assign({},p,{data:p[o.mapToData],[o.mapToData]:void 0}),i(p);if(o.renamed){const[d,_]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${d}.${_}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const d=i.endpoint.merge(...u);for(const[_,h]of Object.entries(o.renamedParameters))_ in d&&(e.log.warn(`"${_}" parameter is deprecated for "octokit.${r}.${t}()". Use "${h}" instead`),h in d||(d[h]=d[_]),delete d[_]);return i(d)}return i(...u)}return Object.assign(a,i)}function Is(e){return{rest:wi(e)}}Is.VERSION=_i;var ze={exports:{}},yi=ze.exports,It;function Pi(){return It||(It=1,function(e,r){(function(t,s){e.exports=s()})(yi,function(){var t=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof Rt<"u"?Rt:typeof self<"u"?self:{};function s(w){return w&&w.default||w}var o=function(w,c,n={}){var l,g,m;for(l in c)m=c[l],n[l]=(g=w[l])!=null?g:m;return n},i=function(w,c,n={}){var l,g;for(l in w)g=w[l],c[l]!==void 0&&(n[l]=g);return n},a={load:o,overwrite:i},u;u=class{constructor(c,n){this.incr=c,this.decr=n,this._first=null,this._last=null,this.length=0}push(c){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:c,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var c;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),c=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,c}first(){if(this._first!=null)return this._first.value}getArray(){var c,n,l;for(c=this._first,l=[];c!=null;)l.push((n=c,c=c.next,n.value));return l}forEachShift(c){var n;for(n=this.shift();n!=null;)c(n),n=this.shift()}debug(){var c,n,l,g,m;for(c=this._first,m=[];c!=null;)m.push((n=c,c=c.next,{value:n.value,prev:(l=n.prev)!=null?l.value:void 0,next:(g=n.next)!=null?g.value:void 0}));return m}};var p=u,d;d=class{constructor(c){if(this.instance=c,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,l)=>this._addListener(n,"many",l),this.instance.once=(n,l)=>this._addListener(n,"once",l),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(c,n,l){var g;return(g=this._events)[c]==null&&(g[c]=[]),this._events[c].push({cb:l,status:n}),this.instance}listenerCount(c){return this._events[c]!=null?this._events[c].length:0}async trigger(c,...n){var l,g;try{return c!=="debug"&&this.trigger("debug",`Event triggered: ${c}`,n),this._events[c]==null?void 0:(this._events[c]=this._events[c].filter(function(m){return m.status!=="none"}),g=this._events[c].map(async m=>{var E,v;if(m.status!=="none"){m.status==="once"&&(m.status="none");try{return v=typeof m.cb=="function"?m.cb(...n):void 0,typeof(v!=null?v.then:void 0)=="function"?await v:v}catch(A){return E=A,this.trigger("error",E),null}}}),(await Promise.all(g)).find(function(m){return m!=null}))}catch(m){return l=m,this.trigger("error",l),null}}};var _=d,h,f,T;h=p,f=_,T=class{constructor(c){this.Events=new f(this),this._length=0,this._lists=(function(){var n,l,g;for(g=[],n=1,l=c;1<=l?n<=l:n>=l;1<=l?++n:--n)g.push(new h(()=>this.incr(),()=>this.decr()));return g}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(c){return this._lists[c.options.priority].push(c)}queued(c){return c!=null?this._lists[c].length:this._length}shiftAll(c){return this._lists.forEach(function(n){return n.forEachShift(c)})}getFirst(c=this._lists){var n,l,g;for(n=0,l=c.length;n<l;n++)if(g=c[n],g.length>0)return g;return[]}shiftLastFrom(c){return this.getFirst(this._lists.slice(c).reverse()).shift()}};var y=T,k;k=class extends Error{};var b=k,O,D,U,V,I;V=10,D=5,I=a,O=b,U=class{constructor(c,n,l,g,m,E,v,A){this.task=c,this.args=n,this.rejectOnDrop=m,this.Events=E,this._states=v,this.Promise=A,this.options=I.load(l,g),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===g.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise(($,B)=>{this._resolve=$,this._reject=B}),this.retryCount=0}_sanitizePriority(c){var n;return n=~~c!==c?D:c,n<0?0:n>V-1?V-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:c,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(c??new O(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(c){var n;if(n=this._states.jobStatus(this.options.id),!(n===c||c==="DONE"&&n===null))throw new O(`Invalid job status ${n}, expected ${c}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(c,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:c,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(c,n,l,g){var m,E,v;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),E={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",E);try{if(v=await(c!=null?c.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(E),await g(this.options,E),this._assertStatus("DONE"),this._resolve(v)}catch(A){return m=A,this._onFailure(m,E,n,l,g)}}doExpire(c,n,l){var g,m;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),m={args:this.args,options:this.options,retryCount:this.retryCount},g=new O(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(g,m,c,n,l)}async _onFailure(c,n,l,g,m){var E,v;if(l())return E=await this.Events.trigger("failed",c,n),E!=null?(v=~~E,this.Events.trigger("retry",`Retrying ${this.options.id} after ${v} ms`,n),this.retryCount++,g(v)):(this.doDone(n),await m(this.options,n),this._assertStatus("DONE"),this._reject(c))}doDone(c){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",c)}};var W=U,P,H,ne;ne=a,P=b,H=class{constructor(c,n,l){this.instance=c,this.storeOptions=n,this.clientId=this.instance._randomIndex(),ne.load(l,l,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var c;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(c=this.heartbeat=setInterval(()=>{var n,l,g,m,E;if(m=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&m>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=m,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&m>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:g,reservoir:E}=this.storeOptions,this._lastReservoirIncrease=m,l=g!=null?Math.min(n,g-E):n,l>0))return this.storeOptions.reservoir+=l,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?c.unref():void 0:clearInterval(this.heartbeat)}async __publish__(c){return await this.yieldLoop(),this.instance.Events.trigger("message",c.toString())}async __disconnect__(c){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(c=0){return new this.Promise(function(n,l){return setTimeout(n,c)})}computePenalty(){var c;return(c=this.storeOptions.penalty)!=null?c:15*this.storeOptions.minTime||5e3}async __updateSettings__(c){return await this.yieldLoop(),ne.overwrite(c,c,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(c){return await this.yieldLoop(),this._nextRequest+this.timeout<c}computeCapacity(){var c,n;return{maxConcurrent:c,reservoir:n}=this.storeOptions,c!=null&&n!=null?Math.min(c-this._running,n):c!=null?c-this._running:n??null}conditionsCheck(c){var n;return n=this.computeCapacity(),n==null||c<=n}async __incrementReservoir__(c){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=c,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(c){return this._unblockTime>=c}check(c,n){return this.conditionsCheck(c)&&this._nextRequest-n<=0}async __check__(c){var n;return await this.yieldLoop(),n=Date.now(),this.check(c,n)}async __register__(c,n,l){var g,m;return await this.yieldLoop(),g=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),m=Math.max(this._nextRequest-g,0),this._nextRequest=g+m+this.storeOptions.minTime,{success:!0,wait:m,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(c,n){var l,g,m;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new P(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return g=Date.now(),m=this.storeOptions.highWater!=null&&c===this.storeOptions.highWater&&!this.check(n,g),l=this.strategyIsBlock()&&(m||this.isBlocked(g)),l&&(this._unblockTime=g+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:m,blocked:l,strategy:this.storeOptions.strategy}}async __free__(c,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var or=H,G,N;G=b,N=class{constructor(c){this.status=c,this._jobs={},this.counts=this.status.map(function(){return 0})}next(c){var n,l;if(n=this._jobs[c],l=n+1,n!=null&&l<this.status.length)return this.counts[n]--,this.counts[l]++,this._jobs[c]++;if(n!=null)return this.counts[n]--,delete this._jobs[c]}start(c){var n;return n=0,this._jobs[c]=n,this.counts[n]++}remove(c){var n;return n=this._jobs[c],n!=null&&(this.counts[n]--,delete this._jobs[c]),n!=null}jobStatus(c){var n;return(n=this.status[this._jobs[c]])!=null?n:null}statusJobs(c){var n,l,g,m,E;if(c!=null){if(l=this.status.indexOf(c),l<0)throw new G(`status must be one of ${this.status.join(", ")}`);g=this._jobs,m=[];for(n in g)E=g[n],E===l&&m.push(n);return m}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((c,n,l)=>(c[this.status[l]]=n,c),{})}};var Q=N,ue,ee;ue=p,ee=class{constructor(c,n){this.schedule=this.schedule.bind(this),this.name=c,this.Promise=n,this._running=0,this._queue=new ue}isEmpty(){return this._queue.length===0}async _tryToRun(){var c,n,l,g,m,E,v;if(this._running<1&&this._queue.length>0)return this._running++,{task:v,args:c,resolve:m,reject:g}=this._queue.shift(),n=await async function(){try{return E=await v(...c),function(){return m(E)}}catch(A){return l=A,function(){return g(l)}}}(),this._running--,this._tryToRun(),n()}schedule(c,...n){var l,g,m;return m=g=null,l=new this.Promise(function(E,v){return m=E,g=v}),this._queue.push({task:c,args:n,resolve:m,reject:g}),this._tryToRun(),l}};var ge=ee,$e="2.19.5",nr={version:$e},Ne=Object.freeze({version:$e,default:nr}),Vr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),zr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Hs=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Kr,Yr,Qr,Jr,Xr,Be;Be=a,Kr=_,Jr=Vr,Qr=zr,Xr=Hs,Yr=(function(){class w{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,Be.load(this.limiterOptions,this.defaults,this),this.Events=new Kr(this),this.instances={},this.Bottleneck=ct,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new Jr(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new Qr(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var l;return(l=this.instances[n])!=null?l:(()=>{var g;return g=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",g,n),g})()}async deleteKey(n=""){var l,g;return g=this.instances[n],this.connection&&(l=await this.connection.__runCommand__(["del",...Xr.allKeys(`${this.id}-${n}`)])),g!=null&&(delete this.instances[n],await g.disconnect()),g!=null||l>0}limiters(){var n,l,g,m;l=this.instances,g=[];for(n in l)m=l[n],g.push({key:n,limiter:m});return g}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,l,g,m,E,v,A,$,B;if(this.connection==null)return this.Promise.resolve(this.keys());for(v=[],n=null,B=`b_${this.id}-`.length,l=9;n!==0;)for([$,g]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~$,m=0,A=g.length;m<A;m++)E=g[m],v.push(E.slice(B,-l));return v}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var l,g,m,E,v,A;v=Date.now(),m=this.instances,E=[];for(g in m){A=m[g];try{await A._store.__groupCheck__(v)?E.push(this.deleteKey(g)):E.push(void 0)}catch($){l=$,E.push(A.Events.trigger("error",l))}}return E},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(Be.overwrite(n,this.defaults,this),Be.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var l;if(!this.sharedConnection)return(l=this.connection)!=null?l.disconnect(n):void 0}}return w.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},w}).call(t);var Ms=Yr,Zr,et,rt;rt=a,et=_,Zr=(function(){class w{constructor(n={}){this.options=n,rt.load(this.options,this.defaults,this),this.Events=new et(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,l)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var l;return this._arr.push(n),l=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),l}}return w.prototype.defaults={maxTime:null,maxSize:null,Promise},w}).call(t);var Ws=Zr,Vs=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),zs=s(Ne),tt,st,ir,ar,ot,ur,nt,it,at,cr,re,ut=[].splice;ur=10,st=5,re=a,nt=y,ar=W,ot=or,it=Vs,ir=_,at=Q,cr=ge,tt=(function(){class w{constructor(n={},...l){var g,m;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,l),re.load(n,this.instanceDefaults,this),this._queues=new nt(ur),this._scheduled={},this._states=new at(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new ir(this),this._submitLock=new cr("submit",this.Promise),this._registerLock=new cr("register",this.Promise),m=re.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return g=re.load(n,this.redisStoreDefaults,{}),new it(this,m,g);if(this.datastore==="local")return g=re.load(n,this.localStoreDefaults,{}),new ot(this,m,g);throw new w.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var E;return(E=this._store.heartbeat)!=null&&typeof E.ref=="function"?E.ref():void 0}),this._queues.on("zero",()=>{var E;return(E=this._store.heartbeat)!=null&&typeof E.unref=="function"?E.unref():void 0})}_validateOptions(n,l){if(!(n!=null&&typeof n=="object"&&l.length===0))throw new w.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,l,g,m){var E,v;try{if({running:v}=await this._store.__free__(n,g.weight),this.Events.trigger("debug",`Freed ${g.id}`,m),v===0&&this.empty())return this.Events.trigger("idle")}catch(A){return E=A,this.Events.trigger("error",E)}}_run(n,l,g){var m,E,v;return l.doRun(),m=this._clearGlobalState.bind(this,n),v=this._run.bind(this,n,l),E=this._free.bind(this,n,l),this._scheduled[n]={timeout:setTimeout(()=>l.doExecute(this._limiter,m,v,E),g),expiration:l.options.expiration!=null?setTimeout(function(){return l.doExpire(m,v,E)},g+l.options.expiration):void 0,job:l}}_drainOne(n){return this._registerLock.schedule(()=>{var l,g,m,E,v;return this.queued()===0?this.Promise.resolve(null):(v=this._queues.getFirst(),{options:E,args:l}=m=v.first(),n!=null&&E.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${E.id}`,{args:l,options:E}),g=this._randomIndex(),this._store.__register__(g,E.weight,E.expiration).then(({success:A,wait:$,reservoir:B})=>{var Fe;return this.Events.trigger("debug",`Drained ${E.id}`,{success:A,args:l,options:E}),A?(v.shift(),Fe=this.empty(),Fe&&this.Events.trigger("empty"),B===0&&this.Events.trigger("depleted",Fe),this._run(g,m,$),this.Promise.resolve(E.weight)):this.Promise.resolve(null)})))})}_drainAll(n,l=0){return this._drainOne(n).then(g=>{var m;return g!=null?(m=n!=null?n-g:n,this._drainAll(m,l+g)):this.Promise.resolve(l)}).catch(g=>this.Events.trigger("error",g))}_dropAllQueued(n){return this._queues.shiftAll(function(l){return l.doDrop({message:n})})}stop(n={}){var l,g;return n=re.load(n,this.stopDefaults),g=m=>{var E;return E=()=>{var v;return v=this._states.counts,v[0]+v[1]+v[2]+v[3]===m},new this.Promise((v,A)=>E()?v():this.on("done",()=>{if(E())return this.removeAllListeners("done"),v()}))},l=n.dropWaitingJobs?(this._run=function(m,E){return E.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var m,E,v;E=this._scheduled;for(m in E)v=E[m],this.jobStatus(v.job.options.id)==="RUNNING"&&(clearTimeout(v.timeout),clearTimeout(v.expiration),v.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),g(0)}))):this.schedule({priority:ur-1,weight:0},()=>g(1)),this._receive=function(m){return m._reject(new w.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new w.prototype.BottleneckError("stop() has already been called")),l}async _addToQueue(n){var l,g,m,E,v,A,$;({args:l,options:E}=n);try{({reachedHWM:v,blocked:g,strategy:$}=await this._store.__submit__(this.queued(),E.weight))}catch(B){return m=B,this.Events.trigger("debug",`Could not queue ${E.id}`,{args:l,options:E,error:m}),n.doDrop({error:m}),!1}return g?(n.doDrop(),!0):v&&(A=$===w.prototype.strategy.LEAK?this._queues.shiftLastFrom(E.priority):$===w.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(E.priority+1):$===w.prototype.strategy.OVERFLOW?n:void 0,A!=null&&A.doDrop(),A==null||$===w.prototype.strategy.OVERFLOW)?(A==null&&n.doDrop(),v):(n.doQueue(v,g),this._queues.push(n),await this._drainAll(),v)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new w.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var l,g,m,E,v,A,$;return typeof n[0]=="function"?(v=n,[g,...n]=v,[l]=ut.call(n,-1),E=re.load({},this.jobDefaults)):(A=n,[E,g,...n]=A,[l]=ut.call(n,-1),E=re.load(E,this.jobDefaults)),$=(...B)=>new this.Promise(function(Fe,Ys){return g(...B,function(...lt){return(lt[0]!=null?Ys:Fe)(lt)})}),m=new ar($,n,E,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),m.promise.then(function(B){return typeof l=="function"?l(...B):void 0}).catch(function(B){return Array.isArray(B)?typeof l=="function"?l(...B):void 0:typeof l=="function"?l(B):void 0}),this._receive(m)}schedule(...n){var l,g,m;return typeof n[0]=="function"?([m,...n]=n,g={}):[g,m,...n]=n,l=new ar(m,n,g,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(l),l.promise}wrap(n){var l,g;return l=this.schedule.bind(this),g=function(...m){return l(n.bind(this),...m)},g.withOptions=function(m,...E){return l(m,n,...E)},g}async updateSettings(n={}){return await this._store.__updateSettings__(re.overwrite(n,this.storeDefaults)),re.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return w.default=w,w.Events=ir,w.version=w.prototype.version=zs.version,w.strategy=w.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},w.BottleneckError=w.prototype.BottleneckError=b,w.Group=w.prototype.Group=Ms,w.RedisConnection=w.prototype.RedisConnection=Vr,w.IORedisConnection=w.prototype.IORedisConnection=zr,w.Batcher=w.prototype.Batcher=Ws,w.prototype.jobDefaults={priority:st,weight:1,expiration:null,id:"<no-id>"},w.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:w.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},w.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},w.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},w.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},w.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},w}).call(t);var ct=tt,Ks=ct;return Ks})}(ze)),ze.exports}var ki=Pi();const qs=In(ki);var Oi="0.0.0-development";async function xs(e,r,t,s){if(!t.request||!t.request.request)throw t;if(t.status>=400&&!e.doNotRetry.includes(t.status)){const o=s.request.retries!=null?s.request.retries:e.retries,i=Math.pow((s.request.retryCount||0)+1,2);throw r.retry.retryRequest(t,o,i)}throw t}async function Gi(e,r,t,s){const o=new qs;return o.on("failed",function(i,a){const u=~~i.request.request.retries,p=~~i.request.request.retryAfter;if(s.request.retryCount=a.retryCount+1,u>a.retryCount)return p*e.retryAfterBaseValue}),o.schedule(Ri.bind(null,e,r,t),s)}async function Ri(e,r,t,s){const o=await t(t,s);if(o.data&&o.data.errors&&o.data.errors.length>0&&/Something went wrong while executing your query/.test(o.data.errors[0].message)){const i=new Le(o.data.errors[0].message,500,{request:s,response:o});return xs(e,r,i,s)}return o}function js(e,r){const t=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,410,422,451],retries:3},r.retry);return t.enabled&&(e.hook.error("request",xs.bind(null,t,e)),e.hook.wrap("request",Gi.bind(null,t,e))),{retry:{retryRequest:(s,o,i)=>(s.request.request=Object.assign({},s.request.request,{retries:o,retryAfter:i}),s)}}}js.VERSION=Oi;var Ai="0.0.0-development",_r=()=>Promise.resolve();function Si(e,r,t){return e.retryLimiter.schedule(Fi,e,r,t)}async function Fi(e,r,t){const{pathname:s}=new URL(t.url,"http://github.test"),o=Ci(t.method,s),i=!o&&t.method!=="GET"&&t.method!=="HEAD",a=t.method==="GET"&&s.startsWith("/search/"),u=s.startsWith("/graphql"),d=~~r.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(d.expiration=1e3*60),(i||u)&&await e.write.key(e.id).schedule(d,_r),i&&e.triggersNotification(s)&&await e.notifications.key(e.id).schedule(d,_r),a&&await e.search.key(e.id).schedule(d,_r);const _=(o?e.auth:e.global).key(e.id).schedule(d,r,t);if(u){const h=await _;if(h.data.errors!=null&&h.data.errors.some(f=>f.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:h,data:h.data})}return _}function Ci(e,r){return e==="PATCH"&&/^\/applications\/[^/]+\/token\/scoped$/.test(r)||e==="POST"&&(/^\/applications\/[^/]+\/token$/.test(r)||/^\/app\/installations\/[^/]+\/access_tokens$/.test(r)||r==="/login/oauth/access_token")}var Di=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/issues/{issue_number}/sub_issue","/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function Ui(e){const t=`^(?:${e.map(s=>s.split("/").map(o=>o.startsWith("{")?"(?:.+?)":o).join("/")).map(s=>`(?:${s})`).join("|")})[^/]*$`;return new RegExp(t,"i")}var qt=Ui(Di),$s=qt.test.bind(qt),he={},Li=function(e,r){he.global=new e.Group({id:"octokit-global",maxConcurrent:10,...r}),he.auth=new e.Group({id:"octokit-auth",maxConcurrent:1,...r}),he.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...r}),he.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...r}),he.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...r})};function Wr(e,r){const{enabled:t=!0,Bottleneck:s=qs,id:o="no-id",timeout:i=1e3*60*2,connection:a}=r.throttle||{};if(!t)return{};const u={timeout:i};typeof a<"u"&&(u.connection=a),he.global==null&&Li(s,u);const p=Object.assign({clustering:a!=null,triggersNotification:$s,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new s,id:o,...he},r.throttle);if(typeof p.onSecondaryRateLimit!="function"||typeof p.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const d={},_=new s.Events(d);return d.on("secondary-limit",p.onSecondaryRateLimit),d.on("rate-limit",p.onRateLimit),d.on("error",h=>e.log.warn("Error in throttling-plugin limit handler",h)),p.retryLimiter.on("failed",async function(h,f){const[T,y,k]=f.args,{pathname:b}=new URL(k.url,"http://github.test");if(!(b.startsWith("/graphql")&&h.status!==401||h.status===403||h.status===429))return;const D=~~y.retryCount;y.retryCount=D,k.request.retryCount=D;const{wantRetry:U,retryAfter:V=0}=await async function(){var I;if(/\bsecondary rate\b/i.test(h.message)){const W=Number(h.response.headers["retry-after"])||T.fallbackSecondaryRateRetryAfter;return{wantRetry:await _.trigger("secondary-limit",W,k,e,D),retryAfter:W}}if(h.response.headers!=null&&h.response.headers["x-ratelimit-remaining"]==="0"||(((I=h.response.data)==null?void 0:I.errors)??[]).some(W=>W.type==="RATE_LIMITED")){const W=new Date(~~h.response.headers["x-ratelimit-reset"]*1e3).getTime(),P=Math.max(Math.ceil((W-Date.now())/1e3)+1,0);return{wantRetry:await _.trigger("rate-limit",P,k,e,D),retryAfter:P}}return{}}();if(U)return y.retryCount++,V*T.retryAfterBaseValue}),e.hook.wrap("request",Si.bind(null,p)),{}}Wr.VERSION=Ai;Wr.triggersNotification=$s;var Ii="0.0.0-development",Ns=oi.plugin(Is,Fs,fi,js,Wr).defaults({userAgent:`octokit.js/${Ii}`,throttle:{onRateLimit:qi,onSecondaryRateLimit:xi}});function qi(e,r,t){if(t.log.warn(`Request quota exhausted for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}function xi(e,r,t){if(t.log.warn(`SecondaryRateLimit detected for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}let Er=(()=>{const e=Bs()||"";return e&&new Ns({auth:e}),e})();function ji(e){Er=e,localStorage.setItem("nina-admin",Er),new Ns({auth:Er})}function Bs(){return localStorage.getItem("nina-admin")}var $i=(e,r)=>ji(F(r)),Ni=Nr('<h1>Set up Github token</h1> <form><label>Token <input type="password"/></label></form>',1);function Bi(e,r){Cr(r,!0);let t=x(ce(Bs()||""));var s=Ni(),o=fe(ts(s),2),i=ie(o),a=fe(ie(i));a.__change=[$i,t],bs(a,()=>F(t),u=>C(t,u)),Br(e,s),Dr()}$r(["change"]);To();function xt(e){return Hi("/fehwgc-locator/images/"+e)}function Hi(e){return e.replace("//","/")}function jt(e,r,t,s,o,i,a,u,p,d,_,h,f,T){if(e instanceof TouchEvent&&e.touches.length===2){C(r,!1),C(t,!0),C(s,o(e.touches),!0),C(i,a(),!0),(k=>{var b=oo(k,2);C(u,b[0],!0),C(p,b[1],!0)})(d(e.touches));return}C(r,!0);const y=e instanceof TouchEvent?e.touches[0]:e;C(_,y.clientX-h()),C(f,y.clientY-T()),e.preventDefault()}var Mi=Nr('<div class="viewport svelte-1h1d55m"><img alt="Zoomable view" draggable="false" class="svelte-1h1d55m"/></div> <div class="controls svelte-1h1d55m">Zoom: <input type="range" min="0.5" max="4" step="0.01"/></div>',1);function Wi(e,r){let t,s,o=Me(r,"src",3,""),i=Me(r,"x",7,0),a=Me(r,"y",7,0),u=Me(r,"scale",7,1),p=x(!1),d=x(!1),_=x(0),h=x(0),f=x(0),T=x(1),y=x(0),k=x(0);function b(G){if(G instanceof TouchEvent&&G.touches.length===2){const Q=V(G.touches),ue=F(T)*(Q/F(f)),ee=Math.min(Math.max(.5,ue),4),ge=t.getBoundingClientRect(),$e=F(y)-ge.left-t.clientWidth/2,nr=F(k)-ge.top-t.clientHeight/2,Ne=ee-u();i(i()-$e*(Ne/u())),a(a()-nr*(Ne/u())),u(ee),U();return}if(!F(p))return;const N=G instanceof TouchEvent?G.touches[0]:G;i(N.clientX-F(_)),a(N.clientY-F(h)),U(),G.preventDefault()}function O(){C(p,!1),C(d,!1)}function D(G){const N=u();u(u()+G.deltaY*-.001),u(Math.min(Math.max(.5,u()),4));const Q=t.getBoundingClientRect(),ue=G.clientX-Q.left-t.clientWidth/2,ee=G.clientY-Q.top-t.clientHeight/2;i(i()-ue*(u()-N)/N),a(a()-ee*(u()-N)/N),U(),G.preventDefault()}function U(){if(!s||!t)return;const G=s.naturalWidth*u(),N=s.naturalHeight*u(),Q=t.clientWidth,ue=t.clientHeight,ee=Math.max(0,(G-Q)/2),ge=Math.max(0,(N-ue)/2);i(Math.min(Math.max(i(),-ee),ee)),a(Math.min(Math.max(a(),-ge),ge))}function V(G){const N=G[0].clientX-G[1].clientX,Q=G[0].clientY-G[1].clientY;return Math.hypot(N,Q)}function I(G){const N=(G[0].clientX+G[1].clientX)/2,Q=(G[0].clientY+G[1].clientY)/2;return[N,Q]}var W=Mi(),P=ts(W);P.__pointerdown=[jt,p,d,f,V,T,u,y,k,I,_,i,h,a],P.__pointermove=b,P.__pointerup=O,P.__touchstart=[jt,p,d,f,V,T,u,y,k,I,_,i,h,a],P.__touchmove=b,P.__touchend=O;var H=ie(P);wt(H,G=>s=G,()=>s),wt(P,G=>t=G,()=>t);var ne=fe(P,2),or=fe(ie(ne));qo(()=>{pn(H,"src",o()),un(H,`transform: translate(${i()??""}px, ${a()??""}px) scale(${u()??""});`)}),Ce("pointercancel",P,O),Ce("pointerleave",P,O),Ce("wheel",P,D),Ce("touchcancel",P,O),Ce("load",H,U),bs(or,u),Br(e,W)}$r(["pointerdown","pointermove","pointerup","touchstart","touchmove","touchend"]);function Vi(e,r){Cr(r,!1),hn();const t=Kt(()=>(Ts(xt),Ge(()=>xt("spread.webp"))));Wi(e,{scale:1,get src(){return F(t)},x:0,y:0}),Dr()}var zi=(e,r)=>r("/"),Ki=(e,r)=>r("/token"),Yi=Nr('<main class="container-fluid"><nav><ul><li><strong>Nina admin</strong></li></ul> <ul><li><a href="#/" class="contrast">Weighins</a></li> <li><a href="#/token" class="secondary">Token</a></li></ul></nav> <!></main>');function Qi(e){let r=x(ce(t()));function t(){return location.hash.slice(1)||"/"}window.addEventListener("hashchange",()=>{C(r,t(),!0)});function s(y){location.hash=y}const o={"/":Vi,"/token":Bi},i=Ro(()=>o[F(r)]??o["/"]);var a=Yi(),u=ie(a),p=fe(ie(u),2),d=ie(p),_=ie(d);_.__click=[zi,s];var h=fe(d,2),f=ie(h);f.__click=[Ki,s];var T=fe(u,2);nn(T,()=>F(i),(y,k)=>{k(y,{})}),Br(e,a)}$r(["click"]);tn(Qi,{target:document.getElementById("app")});
